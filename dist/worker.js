(()=>{var E=(t,e)=>Math.sqrt(t*t+e*e),A=t=>t.reduce((e,r)=>e+r,0)/t.length,w=(t,e,r="euclidean")=>A(t.map((a,m)=>A(a.map((c,n)=>E(c,e[m][n])))));var y=(t,e)=>P(t,e,(r,a)=>(r+a)/2),P=(t,e,r)=>t.map((a,m)=>a.map((c,n)=>r(c,e[m][n])));function B(t){let e=t.length,r;for(;e!=0;)r=Math.floor(Math.random()*e),e--,[t[e],t[r]]=[t[r],t[e]];return t}var D=B;onmessage=async function(t){let[e,...r]=t.data,a;e==="process"?a=await F(...r):console.error("Unrecognized message in worker",e),postMessage(["done",a])};async function F(t,e){e.startTime||(e.startTime=Date.now()),e.changed=!1;let r=t.length,a=0;!!t[0].frequencies[0]?.length||t.forEach(p=>p.frequencies=[p.frequencies]);let c=t[0].frequencies;e.frequencies=c[0].length;let n=[];c.forEach((p,u)=>{e.history[0].length===e.duration&&(n.push(Object.assign({},e.history)),e.history=e.history.map(g=>[])),t.map(g=>g.frequencies[u]).forEach((g,f)=>{e.history[f]||(e.history[f]=[]),e.history[f].push(g)})}),e.shuffle&&(n=D(n));let _=n.forEach(async(p,u)=>{let g=performance.now();console.log("Freq",e.freqWindow,e.frequencies);let k=(e.freqWindow?Array.from({length:Math.ceil(e.frequencies/e.freqWindow)},(q,o)=>o*e.freqWindow):[0]).forEach(async q=>{let o=q,v=q+(e.freqWindow??e.frequencies);e.patterns[o]||(e.patterns[o]=[]);let M=e.patterns[o];v>e.frequencies&&(v=e.frequencies);let i=[];for(let s=0;s<r;s++){let l=p[s].map(d=>Array.from(d).slice(o,v));i.push(l)}let b=(Date.now()-e.startTime)/1e3,h=!1;if(M.forEach(s=>{let l=s.average,d=w(i[0],l[0]),x=w(i[1],l[1]);(d+x)/2<e.distanceMax&&(h?h.push(s):h=[s])}),!h){let s={id:Math.floor(1e5*Math.random()),times:[{t:b,i:u}],bin:q,average:i};h=[s],M.push(s)}else h.forEach(s=>{s.times.push({t:b,i:u,original:i}),s.average[0]=y(s.average[0],i[0]),s.average[1]=y(s.average[1],i[1])});h.forEach(s=>{let l=s.times.length,d=!0,x=!0;l>1&&(d||x)&&(e.alphabet.has(s.id)||a++,e.alphabet.set(s.id,l),e.alphabetData.set(s.id,{average:s.average,start:o,end:v,times:s.times,bin:s.bin}),e.changed=!0)})}),T=performance.now(),W=(u+1)/n.length;postMessage(["progress",W,T-g,a])});return e}})();
