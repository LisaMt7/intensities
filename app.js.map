{
  "version": 3,
  "sources": ["../node_server/server_settings.js", "../node_modules/fragelement/DOMElement.js", "../src/components/sse.component.js", "../src/components/socket.component.js", "../src/components/component.js", "../node_modules/objectlisteners/ObjectListener.js", "../src/DOMFragment.js", "../../src/Sound.js", "../../src/index.js", "../src/BreathTrainerApplet.js", "../src/app.js"],
  "sourcesContent": ["const settings = {\n    debug:false, //print debog messages?\n    protocol:'http', //'http' or 'https'. HTTPS required for Nodejs <---> Python sockets. If using http, set production to False in python/server.py as well\n    host: 'localhost', //'localhost' or '127.0.0.1' etc.\n    port: 8080, //e.g. port 80, 443, 8000\n    socket_protocol: 'ws', //frontend socket protocol, wss for served, ws for localhost\n    hotreload: 5000, //hotreload websocket server port\n    python: 7000,  //quart server port\n    python_node:7001, //websocket relay port (relays messages to client from nodejs that were sent to it by python)\n    startpage: 'BreathTrainer.html',  //home page\n    errpage: 'src/other/404.html', //error page, etc.\n    certpath:'node_server/ssl/cert.pem',//if using https, this is required. See cert.pfx.md for instructions\n    keypath:'node_server/ssl/key.pem'//if using https, this is required. See cert.pfx.md for instructions\n}\n\nexports.settings = settings;", "\r\nexport class DOMElement extends HTMLElement { \r\n\r\n    template = (props) => {\r\n        return `<div> Custom Fragment Props: ${JSON.stringify(props)} </div>`\r\n    }; //override the default template string by extending the class, or use options.template if calling the base class\r\n    props = {test:true};\r\n    useShadow = false; //can set to attach a shadow DOM instead (local styles)\r\n  \r\n    oncreate=undefined //(props) => {}  fires on element creation (e.g. to set up logic)\r\n    onresize=undefined //(props) => {} fires on window resize\r\n    ondelete=undefined //(props) => {} fires after element is deleted\r\n    onchanged=undefined //(props) => {} fires when props change\r\n\r\n    FRAGMENT = undefined;\r\n    attachedShadow = false;\r\n\r\n    obsAttributes=[\"props\",\"options\",\"onchanged\",\"onresize\",\"ondelete\",\"oncreate\",\"template\"]\r\n \r\n    get observedAttributes() {\r\n        return this.obsAttributes;\r\n    }\r\n\r\n    get obsAttributes() {\r\n        return this.obsAttributes;\r\n    }\r\n\r\n    set obsAttributes(att) {\r\n        if(typeof att === 'string') {\r\n            this.obsAttributes.push(att);\r\n        } else if (Array.isArray(att)) this.obsAttributes=att;\r\n    }\r\n\r\n    static get tag(){return this.name.toLowerCase()+'-'} //tagName, default 'classname-'. Set as a static variable for the internal addElement to reference\r\n\r\n    //add self or a specified class to the window which can be used via html like <custom-tag></custom-tag>\r\n    //will default be the classname with a '-' at the end if no tag supplied\r\n    static addElement(tag=this.tag,cls=this,extend=undefined) {\r\n        addCustomElement(cls,tag,extend);\r\n    }\r\n\r\n    attributeChangedCallback(name, old, val) {\r\n        if(name === 'onchanged') {\r\n            let onchanged = val;\r\n            if(typeof onchanged === 'string') onchanged = parseFunctionFromText(onchanged);\r\n            if(typeof onchanged === 'function') { \r\n                this.onchanged =  onchanged;\r\n                this.state.data.props = this.props;\r\n                this.state.unsubscribeTrigger('props'); //remove any previous subs\r\n                this.state.subscribeTrigger('props',this.onchanged);\r\n                let changed = new CustomEvent('changed', {detail: { props:this.props }});\r\n                this.state.subscribeTrigger('props',()=>{this.dispatchEvent(changed)});\r\n            }\r\n        }\r\n        else if(name === 'onresize') {\r\n            let onresize = val;\r\n            if(typeof onresize === 'string')  onresize = parseFunctionFromText(onresize);\r\n            if(typeof onresize === 'function') {\r\n                if(this.ONRESIZE) {\r\n                    try { window.removeEventListener('resize',this.ONRESIZE); } catch(err) {}\r\n                }\r\n                this.ONRESIZE = (ev) => { this.onresize(this.props); } \r\n                this.onresize = onresize;\r\n                window.addEventListener('resize',this.ONRESIZE);\r\n            }\r\n        }\r\n        else if(name === 'ondelete') {\r\n            let ondelete = val;\r\n            if(typeof ondelete === 'string') ondelete = parseFunctionFromText(ondelete);\r\n            if(typeof ondelete === 'function') { \r\n                this.ondelete = () => {\r\n                    if(this.ONRESIZE) window.removeEventListener('resize',this.ONRESIZE);\r\n                    this.state.unsubscribeTrigger('props');\r\n                    if(ondelete) ondelete(this.props);\r\n                }\r\n            }\r\n        }\r\n        else if(name === 'oncreate') { \r\n            let oncreate = val;\r\n            if(typeof oncreate === 'string') oncreate = parseFunctionFromText(oncreate);\r\n            if(typeof oncreate === 'function') { \r\n                this.oncreate = oncreate;\r\n            }\r\n        }\r\n        else if(name === 'props') { //update the props, fires any onchanged stuff\r\n            let newProps = val;\r\n            if(typeof newProps === 'string') newProps = JSON.parse(newProps);\r\n\r\n            Object.assign(this.props,newProps);\r\n            this.state.setState({props:this.props});\r\n        }\r\n        else if(name === 'template') { //change the html template\r\n\r\n            let template = val;\r\n\r\n            this.template = options.template; //function or string;\r\n\r\n            if(typeof template === 'function') this.templateString = this.template(this.props); //can pass a function\r\n            else this.templateString = template;\r\n            \r\n            //render the new template\r\n            this.render(this.props);\r\n            let created = new CustomEvent('created', {detail: { props:this.props }});\r\n            this.dispatchEvent(created);\r\n\r\n        }\r\n        else { //arbitrary attributes\r\n            let parsed = val;\r\n            if(name.includes('eval_')) { // e.g. <custom-  eval_loginput=\"(input)=>{console.log(input);}\"></custom-> //now elm.loginput(input) should work\r\n                name = name.split('_')\r\n                name.shift()\r\n                name = name.join();\r\n                parsed = parseFunctionFromText(val);  \r\n            }\r\n            else if (typeof val === 'string') {\r\n                try {\r\n                    parsed = JSON.parse(val)\r\n                } catch (err) {\r\n                    parsed = val;\r\n                }\r\n            }\r\n            this[name] = parsed; // set arbitrary props \r\n            this.props[name] = parsed; //reflect it in the props object (to set props via attributes more easily)\r\n            //this.props[name] = val; //set arbitrary props via attributes\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n\r\n        // set initial props\r\n        let newProps = this.getAttribute('props');\r\n        if(typeof newProps === 'string') newProps = JSON.parse(newProps);\r\n\r\n        Object.assign(this.props,newProps);\r\n        this.state.setState({props:this.props});\r\n\r\n        //Observe arbitrary attributes\r\n        Array.from(this.attributes).forEach((att) => {\r\n            let name = att.name;\r\n            //console.log(name,this.getAttribute(name),this[name])\r\n            //get/set/observe arbitrary attributes\r\n            let parsed = att.value;\r\n            if(name.includes('eval_')) { // e.g. <custom-  eval_loginput=\"(input)=>{console.log(input);}\"></custom-> //now elm.loginput(input) should work\r\n                name = name.split('_')\r\n                name.shift()\r\n                name = name.join();\r\n                parsed = parseFunctionFromText(att.value);  \r\n            }\r\n            else if (typeof att.value === 'string') {\r\n                try {\r\n                    parsed = JSON.parse(att.value)\r\n                } catch (err) {\r\n                    parsed = att.value;\r\n                }\r\n            }\r\n            if(!this[name]) {\r\n                Object.defineProperties(\r\n                    this, att, {\r\n                        value:parsed,\r\n                        writable:true,\r\n                        get() { return this[name]; },\r\n                        set(val) { this.setAttribute(name, val); }\r\n                    }\r\n                )\r\n            }\r\n            this[name] = parsed;\r\n            this.props[name] = parsed; //set on props too (e.g. to more easily modify initial conditions without stringifying an object)\r\n            this.obsAttributes.push(name);\r\n            \r\n            //console.log(this.observedAttributes);\r\n        });\r\n\r\n        let resizeevent = new CustomEvent('resized', {detail: { props:this.props }});\r\n        let changed = new CustomEvent('changed', {detail: { props:this.props }});\r\n        let deleted = new CustomEvent('deleted', {detail: { props:this.props }});\r\n        let created = new CustomEvent('created', {detail: { props:this.props }});\r\n        //now we can add event listeners for our custom events\r\n\r\n        this.render(this.props);\r\n        this.dispatchEvent(created);\r\n\r\n        this.state.subscribeTrigger('props',()=>{this.dispatchEvent(changed)});\r\n\r\n        if(typeof this.onresize === 'function') {\r\n            if(this.ONRESIZE) {\r\n                try { window.removeEventListener('resize',this.ONRESIZE); } catch(err) {}\r\n            }\r\n            this.ONRESIZE = (ev) => { this.onresize(this.props); } \r\n            window.addEventListener('resize',this.ONRESIZE);       \r\n        }\r\n\r\n        if(typeof this.ondelete === 'function') {\r\n            let ondelete = this.ondelete;\r\n            this.ondelete = (props=this.props) => {\r\n                if(this.ONRESIZE) window.removeEventListener('resize',this.ONRESIZE);\r\n                this.state.unsubscribeTrigger('props');\r\n                ondelete(props);\r\n            }\r\n        }\r\n\r\n        if(typeof this.onchanged === 'function') {\r\n            this.state.data.props = this.props;\r\n            this.state.subscribeTrigger('props',this.onchanged);\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    delete = () => { //deletes self from the DOM\r\n        this.remove();\r\n        if(typeof this.ondelete === 'function') this.ondelete(this.props);\r\n    };\r\n\r\n    render = (props=this.props) => {\r\n\r\n        if(typeof this.template === 'function') this.templateString = this.template(props); //can pass a function\r\n        else this.templateString = this.template;\r\n\r\n        //this.innerHTML = this.templateString;\r\n\r\n        const t = document.createElement('template');\r\n        t.innerHTML = this.templateString;\r\n        const fragment = t.content;\r\n\r\n        if(this.FRAGMENT) { //will reappend the fragment without reappending the whole node if already rendered once\r\n            if(this.useShadow) {\r\n                this.shadowRoot.removeChild(this.FRAGMENT);\r\n            }   \r\n            else this.removeChild(this.FRAGMENT); \r\n        }\r\n        if(this.useShadow) {\r\n            if(!this.attachedShadow) this.attachShadow({mode:'open'});\r\n            this.shadowRoot.appendChild(fragment); //now you need to use the shadowRoot.querySelector etc.\r\n            this.FRAGMENT = this.shadowRoot.childNodes[this.shadowRoot.childNodes.length-1]\r\n        }   \r\n        else this.appendChild(fragment);\r\n        this.FRAGMENT = this.childNodes[this.childNodes.length-1]\r\n        \r\n        if(this.oncreate) this.oncreate(props); //set scripted behaviors\r\n    }\r\n\r\n    state = {\r\n        pushToState:{},\r\n        data:{},\r\n        triggers:{},\r\n        setState(updateObj){\r\n            Object.assign(this.pushToState,updateObj);\r\n\r\n            if(Object.keys(this.triggers).length > 0) {\r\n                // Object.assign(this.data,this.pushToState);\r\n                for (const prop of Object.getOwnPropertyNames(this.triggers)) {\r\n                    if(this.pushToState[prop]) {\r\n                        this.data[prop] = this.pushToState[prop]\r\n                        delete this.pushToState[prop];\r\n                        this.triggers[prop].forEach((obj)=>{\r\n                            obj.onchanged(this.data[prop]);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.pushToState;\r\n        },\r\n        subscribeTrigger(key,onchanged=(res)=>{}){\r\n            if(key) {\r\n                if(!this.triggers[key]) {\r\n                    this.triggers[key] = [];\r\n                }\r\n                let l = this.triggers[key].length;\r\n                this.triggers[key].push({idx:l, onchanged:onchanged});\r\n                return this.triggers[key].length-1;\r\n            } else return undefined;\r\n        },\r\n        unsubscribeTrigger(key,sub){\r\n            let idx = undefined;\r\n            let triggers = this.triggers[key]\r\n            if (triggers){\r\n                if(!sub) delete this.triggers[key];\r\n                else {\r\n                    let obj = triggers.find((o)=>{\r\n                        if(o.idx===sub) {return true;}\r\n                    });\r\n                    if(obj) triggers.splice(idx,1);\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        subscribeTriggerOnce(key=undefined,onchanged=(value)=>{}) {\r\n            let sub;\r\n            let changed = (value) => {\r\n                onchanged(value);\r\n                this.unsubscribeTrigger(key,sub);\r\n            }\r\n\r\n            sub = this.subscribeTrigger(key,changed);\r\n        }\r\n    }\r\n\r\n    get props() {\r\n        return this.props;\r\n    } \r\n\r\n    set props(newProps={}) {\r\n        this.setAttribute('props',newProps);\r\n    }\r\n\r\n    get template() {\r\n        return this.template;\r\n    } \r\n\r\n    set template(template) {\r\n        this.setAttribute('template',template);\r\n    }\r\n\r\n    get render() {\r\n        return this.render;\r\n    }\r\n\r\n    get delete() {\r\n        return this.delete;\r\n    }\r\n\r\n    get state() {\r\n        return this.state;\r\n    }\r\n\r\n    //past tense just so it can't conflict with onchange\r\n    get onchanged() {\r\n        return this.onchanged;\r\n    } \r\n\r\n    set onchanged(onchanged) {\r\n        this.setAttribute('onchanged',onchanged);\r\n    }\r\n\r\n    get onresize() {\r\n        return this.props;\r\n    } \r\n\r\n    set onresize(onresize) {\r\n        this.setAttribute('onresize',onresize);\r\n    }\r\n\r\n    get ondelete() {\r\n        return this.props;\r\n    } \r\n\r\n    set ondelete(ondelete) {\r\n        this.setAttribute('ondelete',ondelete);\r\n    }\r\n\r\n    get oncreate() {\r\n        return this.oncreate;\r\n    } \r\n\r\n    set oncreate(oncreate) {\r\n        this.setAttribute('oncreated',oncreate);\r\n    }\r\n}\r\n\r\n//extend the DOMElement class with an new name, this name determines the element name (always lower case in the html regardless of class name cases)\r\nexport function addCustomElement(cls, tag, extend=null) {\r\n    try {\r\n        if(extend) {\r\n            if(tag) window.customElements.define(tag, cls, {extends:extend});\r\n            else window.customElements.define(cls.name.toLowerCase()+'-',cls, {extends:extend});\r\n        }\r\n        else {\r\n            if(tag) window.customElements.define(tag, cls);\r\n            else window.customElements.define(cls.name.toLowerCase()+'-',cls);\r\n        }\r\n    }\r\n    catch(err) {\r\n\r\n    }\r\n}\r\n\r\nexport function randomId(tag='') {\r\n    return tag+Math.floor(Math.random()*1000000000000000);\r\n}\r\n\r\n// Proper DOM fragment implementation which also creates customElements you can use like <so></so>. High HTML5 performance via template fragments\r\nexport function parseFunctionFromText(method) {\r\n    //Get the text inside of a function (regular or arrow);\r\n    let getFunctionBody = (methodString) => {\r\n    return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i, '$2$3$4');\r\n    }\r\n\r\n    let getFunctionHead = (methodString) => {\r\n    let startindex = methodString.indexOf(')');\r\n    return methodString.slice(0, methodString.indexOf('{',startindex) + 1);\r\n    }\r\n\r\n    let newFuncHead = getFunctionHead(method);\r\n    let newFuncBody = getFunctionBody(method);\r\n\r\n    let newFunc;\r\n    try{\r\n        if (newFuncHead.includes('function ')) {\r\n            let varName = newFuncHead.split('(')[1].split(')')[0]\r\n            newFunc = new Function(varName, newFuncBody);\r\n        } else {\r\n            if(newFuncHead.substring(0,6) === newFuncBody.substring(0,6)) {\r\n                //newFuncBody = newFuncBody.substring(newFuncHead.length);\r\n                let varName = newFuncHead.split('(')[1].split(')')[0]\r\n                //console.log(varName, newFuncHead ,newFuncBody);\r\n                newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf('{')+1,newFuncBody.length-1));\r\n            }\r\n            else {\r\n                try {\r\n                    newFunc = eval(newFuncHead + newFuncBody + \"}\");\r\n                } catch(err) {\r\n                    newFunc = eval(method); //try just evaluating the method\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (err) {}\r\n\r\n    return newFunc;\r\n\r\n}\r\n\r\n", "\nimport {DOMElement, addCustomElement} from 'fragelement';\nimport {settings} from '../../node_server/server_settings'\n\nlet component = require('./sse.component.html');\n\n//See: https://github.com/brainsatplay/domelement\nexport class SSE extends DOMElement {\n    props={host:settings.host, port:settings.python, es:undefined} //can specify properties of the element which can be subscribed to for changes.\n    \n    //set the template string or function (which can input props to return a modified string)\n    template=component;\n\n    //DOMElement custom callbacks:\n    oncreate=(props)=>{\n        //let host = 'localhost';\n        //let port = 7000;\n\n        props.es = new EventSource(`http://${props.host}:${props.port}/sse`);\n        props.es.onmessage = function (event) {\n            console.log('Event Source:',event.data);\n        };\n    }\n    //onresize=(props)=>{} //on window resize\n    //onchanged=(props)=>{} //on props changed\n    ondelete=(props)=>{\n        props.es.close()\n    } //on element deleted. Can remove with this.delete() which runs cleanup functions\n}\n\n//window.customElements.define('custom-', Custom);\n\naddCustomElement(SSE,'sse-test');\n", "\nimport {DOMElement, addCustomElement} from 'fragelement';\nimport {settings} from '../../node_server/server_settings'\n\nlet component = require('./socket.component.html');\n\n//See: https://github.com/brainsatplay/domelement\nexport class Socket extends DOMElement {\n    props={host:settings.host, port:settings.python, ws:undefined} //can specify properties of the element which can be subscribed to for changes.\n    \n    //set the template string or function (which can input props to return a modified string)\n    template=component;\n\n    //DOMElement custom callbacks:\n    oncreate=(props)=>{\n        //let host = 'localhost';\n        //let port = 7000;\n\n        props.ws = new WebSocket(`ws://${props.host}:${props.port}/`); //var ws = new WebSocket('ws://' + document.domain + ':' + location.port + '/');\n        props.ws.onmessage = (event) => {\n            const messagesDOM = this.getElementsByTagName('ul')[0];\n            const messageDOM = document.createElement('li');\n            //const message = JSON.parse(event.data).message;\n            const message = event.data;\n            const contentDOM = document.createTextNode(message);\n            messageDOM.appendChild(contentDOM);\n            messagesDOM.appendChild(messageDOM);\n        };\n    }\n    //onresize=(props)=>{} //on window resize\n    //onchanged=(props)=>{} //on props changed\n    ondelete=(props)=>{\n        props.ws.close();\n    } //on element deleted. Can remove with this.delete() which runs cleanup functions\n}\n\n//window.customElements.define('custom-', Custom);\n\naddCustomElement(Socket,'socket-test');\n", "\nimport {DOMElement, addCustomElement} from 'fragelement';\n//import {settings} from '../../node_server/server_settings'\n\nlet component = require('./component.html');\n\n//See: https://github.com/brainsatplay/domelement\nexport class Custom extends DOMElement {\n    props={} //can specify properties of the element which can be subscribed to for changes.\n    \n    //set the template string or function (which can input props to return a modified string)\n    template=component;\n\n    //DOMElement custom callbacks:\n    oncreate=(props)=>{\n        //let host = 'localhost';\n        //let port = 7000;\n\n        console.log(\"Custom html component created!\");\n    }\n    //onresize=(props)=>{} //on window resize\n    //onchanged=(props)=>{} //on props changed\n    ondelete=(props)=>{\n       console.log(\"Custom html component deleted!\")\n    } //on element deleted. Can remove with this.delete() which runs cleanup functions\n}\n\n//window.customElements.define('custom-', Custom);\n\nCustom.addElement('custom-');\n", "\r\n/*\r\n//Example:\r\nlet events = new ObjectListener();\r\nlet x = { y: 1, z: { w: 2 }}\r\n\r\n\r\nevents.addListener(\"y\",x,\"y\");\r\nevents.addListener(\"z\",x,\"z\");\r\n\r\nx.z.w = 3;\r\nx.y = 2;\r\n//See console\r\n\r\n*/\r\n\r\n//By Joshua Brewster (AGPL v3.0 License)\r\n\r\n//Create instance and then call instance.addListener(listenerName,objectToListenTo,propToListenTo,onchange,interval).\r\n//name, propToListenTo, onchange, and interval are optional (leave or set as undefined). Onchange is a custom callback just like for other event listeners. Set a name to make it easier to start and stop or edit each listener.\r\nexport class ObjectListener {\r\n    constructor(debug=false, synchronous=false) {\r\n        this.debug = debug;\r\n        this.listeners = [];\r\n        this.synchronous = synchronous;//check all listeners simulatenously instead of on individual loops. use startSync() to trigger\r\n        this.syncInterval = 'FRAMERATE'; //interval\r\n        this.syncAnim = undefined;\r\n        if(synchronous === true) this.startSync();\r\n    }\r\n\r\n    //add a new object listener with specified props (or none to watch the whole object), and onchange functions, with optional interval\r\n    addListener(listenerKey=null,objectToListenTo,propToListenTo=undefined,onchange=undefined,interval=undefined,debug=this.debug,startRunning=true) {\r\n        if(objectToListenTo === undefined) {\r\n            console.error(\"You must assign an object\");\r\n            return;\r\n        }\r\n\r\n        var key = listenerKey;\r\n        if(key == null) {\r\n            key = Math.floor(Math.random()*100000);\r\n        }\r\n        if(this.synchronous === true) startRunning = false; //negate this in case of synchronous runtime\r\n        var listener = {key:key, listener: new ObjectListenerInstance(objectToListenTo,propToListenTo,onchange,interval,debug,startRunning)};\r\n        this.listeners.push(listener);\r\n    }\r\n\r\n    getListener(key) {\r\n        let found = this.listeners.find((item,i) =>{\r\n            if(item.key === key) return true;\r\n        });\r\n        return found;\r\n    }\r\n\r\n    hasKey(key) {\r\n        var found = false;\r\n        this.listeners.forEach((item,i) =>{\r\n            if(item.key === key) {found = true; return true;}\r\n        });\r\n        return found;\r\n    }\r\n\r\n    getKeyIndices(key) {\r\n        var indices = [];\r\n        this.listeners.find((o,i) => {\r\n            if(o.key === key) {\r\n                indices.push(i);\r\n            }\r\n        });\r\n        return indices;\r\n    }\r\n\r\n    onchange(key=null,newCallback=null){\r\n        if(key == null) {\r\n            this.listeners.forEach((obj,i) => {\r\n                obj.listener.onchange = newCallback;\r\n            });\r\n        }\r\n        else {\r\n            var found = this.listeners.find((o,i) => {\r\n                if(o.name === key) {\r\n                    o.listener.onchange = newCallback;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //Add extra onchange functions\r\n    addFunc = (key=null,newCallback=null, start=true) => {\r\n        var callbackIdx = null;\r\n        if(newCallback !== null){\r\n            if(key == null) {\r\n                this.listeners.forEach((obj,i) => {\r\n                    callbackIdx = obj.listener.addFunc(newCallback);\r\n                    if(obj.listener.running == false && start == true)\r\n                        obj.listener.start();\r\n                });\r\n            }\r\n            else {\r\n                var found = this.listeners.find((obj,i) => {\r\n                    if(obj.key === key) {\r\n                        callbackIdx = obj.listener.addFunc(newCallback);\r\n                        if(obj.listener.running == false && start == true)\r\n                            obj.listener.start();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return callbackIdx;\r\n    }\r\n\r\n    //get the array of secondary onchange functions\r\n    getFuncs = (key=undefined) => {\r\n        if(key) {\r\n            var found = this.listeners.find((o,i) => {\r\n                if(o.key === key) {\r\n                    return true;\r\n                }\r\n            });\r\n            return found.onchangeFuncs;\r\n        } else return undefined;\r\n    }\r\n\r\n    //Remove extra onchange functions\r\n    removeFuncs = (key = null, idx = null, stop=false) => {\r\n        if(key == null) {\r\n            this.listeners.forEach((obj,i) => {\r\n                obj.listener.removeFuncs(idx);\r\n            });\r\n        }\r\n        else {\r\n            var found = this.listeners.find((o,i) => {\r\n                if(o.key === key) {\r\n                    o.listener.removeFuncs(idx);\r\n                    if(o.listener.onchangeFuncs.length === 0 || stop === true) {\r\n                        o.listener.stop()\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //Stop all or named listeners\r\n    stop(key=null) {\r\n        if(this.synchronous) this.stopSync();\r\n        if(key == null) {\r\n            this.listeners.forEach((obj,i) => {\r\n                obj.listener.stop();\r\n            });\r\n        }\r\n        else {\r\n            var found = this.listeners.find((o,i) => {\r\n                if(o.name === key) {\r\n                    o.listener.stop();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //Restart all or named listeners\r\n    start(key=null) {\r\n        if(this.synchronous) this.stopSync();\r\n        if(key == null) {\r\n            this.listeners.forEach((obj,i) => {\r\n                obj.listener.start();\r\n            });\r\n        }\r\n        else {\r\n            var found = this.listeners.find((o,i) => {\r\n                if(o.name === key) {\r\n                    o.listener.start();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    //run listeners synchronously instead of on their own individual loops\r\n    startSync() {\r\n        if(this.synchronous === false) {\r\n            this.synchronous = true;\r\n            this.stop(); //stop the async calls\r\n            let runChecks = () => {\r\n                if(this.synchronous === true) {\r\n                    this.listeners.forEach((l)=>{\r\n                        l.listener.check();\r\n                    });\r\n                    if(this.syncInterval === 'FRAMERATE') {\r\n                        this.syncAnim = requestAnimationFrame(runChecks);\r\n                    } else if (typeof this.syncInterval === 'number') {\r\n                        setTimeout(runChecks, this.syncInterval);\r\n                    }\r\n                }\r\n            }\r\n            runChecks();\r\n        }\r\n    }\r\n\r\n    //stop the synchronous checking\r\n    stopSync() {\r\n        this.synchronous = false;\r\n        if(this.syncAnim) cancelAnimationFrame(this.syncAnim);\r\n    }   \r\n\r\n    remove(key=null){\r\n        if(key == null) {\r\n            this.listeners.forEach((o) => {\r\n                o.listener.stop();\r\n            });\r\n            this.listeners.splice(0,this.listeners.length);\r\n        }\r\n        else {\r\n            var indices = [];\r\n            var found = this.listeners.forEach((o,i) => {\r\n                if(o.key === key) {\r\n                    indices.push(i);\r\n                }\r\n            });\r\n            indices.reverse().forEach((idx) => {\r\n                this.listeners[idx].listener.stop();\r\n                this.listeners.splice(idx,1);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//Instance of an object listener. This will subscribe to object properties (or whole objects) and run attached functions when a change is detected.\r\nexport class ObjectListenerInstance {\r\n    constructor(object,propName=\"__ANY__\",onchange=this.onchange,interval=\"FRAMERATE\",debug=false,startRunning=true) {\r\n        this.debug=debug;\r\n\r\n        this.onchange = onchange; //Main onchange function\r\n        this.onchangeFuncs = []; //Execute extra functions pushed to this array\r\n\r\n        this.object = object; //Objects are always passed by reference\r\n        this.propName = propName;\r\n        this.propOld = undefined;\r\n        this.setListenerRef(propName);\r\n\r\n        this.running = startRunning;\r\n        this.funcs = 0;\r\n\r\n        this.interval;\r\n        if(interval < 10) {\r\n            this.interval = 10; console.log(\"Min recommended interval set: 10ms\");}\r\n        else {\r\n            this.interval = interval;\r\n        }\r\n\r\n        if(startRunning === true) {\r\n            if (typeof window === 'undefined') {\r\n                setTimeout(()=>{this.check();}, 60)\r\n            } else {\r\n                this.checker = requestAnimationFrame(this.check);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Main onchange execution\r\n    onchange = (newData) => {\r\n        console.log(this.propName,\" changed from: \", this.propOld,\" to: \", this.object[this.propName]);\r\n    }\r\n\r\n    //Add extra onchange functions for execution\r\n    addFunc = (onchange=null) => {\r\n        let sub = 0;\r\n        if(onchange !== null){\r\n            this.onchangeFuncs.push({idx:this.funcs, onchange:onchange});\r\n            sub=this.funcs;\r\n            this.funcs++;\r\n        }\r\n        return sub;\r\n    }\r\n\r\n    //Remove extra onchange functions\r\n    removeFuncs(idx = null) {\r\n        let i = 0;\r\n        if(idx === null) {\r\n            this.onchangeFuncs = [];\r\n        }\r\n        else if(this.onchangeFuncs.find((o,j)=>{if(o.idx===idx){ i=j; return true;}}) !== undefined) {\r\n            this.onchangeFuncs.splice(i,1);\r\n        }\r\n    }\r\n\r\n    //Execute extra onchange functions\r\n    onchangeMulti = (newData) => {\r\n        let onChangeCache = [...this.onchangeFuncs]\r\n        onChangeCache.forEach((func,i) => {\r\n            if(this.debug === true) { console.log(func.onchange); }\r\n            func.onchange(newData);\r\n        });\r\n    }\r\n\r\n    //Update listener reference copy.\r\n    setListenerRef = (propName) => {\r\n        if(propName === \"__ANY__\" || propName === null || propName === undefined) {\r\n            this.propOld = JSON.stringifyFast(this.object);\r\n        }\r\n        else if(Array.isArray(this.object[propName])) {\r\n            this.propOld = JSON.stringifyFast(this.object[propName].slice(this.object[propName].length-20));\r\n        }\r\n        else if(typeof this.object[propName] === \"object\"){\r\n            this.propOld = JSON.stringifyFast(this.object[propName]);\r\n        }\r\n        else if(typeof this.object[propName] === \"function\"){\r\n            this.propOld = this.object[propName].toString();\r\n        }\r\n        else{\r\n            this.propOld = this.object[propName]; //usually a number, bool, or string;\r\n        }\r\n        \r\n        if(this.debug === true) { console.log(\"propname\", propName, \", new assignment: \", this.propOld); }\r\n    }\r\n\r\n    check = () => {\r\n        let changed = false;\r\n        if(this.propName === \"__ANY__\" || this.propName === null || this.propName === undefined){\r\n            if(this.propOld !== JSON.stringifyFast(this.object)){\r\n                if(this.debug === true) { console.log(\"onchange: \", this.onchange); }\r\n                this.onchange(this.object);\r\n                if(this.onchangeFuncs.length > 0) { this.onchangeMulti(this.object); }\r\n                this.setListenerRef(this.propName);\r\n                changed = true;\r\n            }\r\n        }\r\n        else if(Array.isArray(this.object[this.propName])) { //cut arrays down for speed\r\n            if(this.propOld !== JSON.stringifyFast(this.object[this.propName].slice(this.object[this.propName].length-20))){\r\n                if(this.debug === true) { console.log(\"onchange: \", this.onchange); }\r\n                this.onchange(this.object[this.propName]);\r\n                if(this.onchangeFuncs.length > 0) { this.onchangeMulti(this.object[this.propName]); }\r\n                this.setListenerRef(this.propName);\r\n                changed = true;\r\n            }\r\n        }\r\n        else if(typeof this.object[this.propName] === \"object\") {\r\n            let string = JSON.stringifyFast(this.object[this.propName]);\r\n            if(this.propOld !== string){\r\n                if(this.debug === true) { console.log(\"onchange: \", this.onchange); }\r\n                this.onchange(this.object[this.propName]);\r\n                if(this.onchangeFuncs.length > 0) { \r\n                    this.onchangeMulti(this.object[this.propName]); \r\n                }\r\n                this.setListenerRef(this.propName);\r\n                changed = true;\r\n            }\r\n        }\r\n        else if(typeof this.object[this.propName] === \"function\") {\r\n            if(this.propOld !== this.object[this.propName].toString()){\r\n                if(this.debug === true) { console.log(\"onchange: \", this.onchange); }\r\n                this.onchange(this.object[this.propName].toString());\r\n                if(this.onchangeFuncs.length > 0) { this.onchangeMulti(this.object[this.propName].toString()); }\r\n                this.setListenerRef(this.propName);\r\n                changed = true;\r\n            }\r\n        }\r\n        else if(this.object[this.propName] !== this.propOld) {\r\n            if(this.debug === true) { console.log(\"onchange: \", this.onchange); }\r\n            this.onchange(this.object[this.propName]);\r\n            if(this.onchangeFuncs.length > 0) { this.onchangeMulti(this.object[this.propName]); }\r\n            this.setListenerRef(this.propName);\r\n            changed = true;\r\n        }\r\n        \r\n        if(this.running === true) {\r\n            if(this.debug === true) {console.log(\"checking\", this.object, this.propName);}\r\n            if(this.interval === \"FRAMERATE\"){\r\n                if (typeof window === 'undefined') {\r\n                    setTimeout(()=>{this.check();}, 16)\r\n                } else {\r\n                    this.checker = requestAnimationFrame(this.check);\r\n                }\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.check();},this.interval);\r\n            }\r\n        };\r\n\r\n        return changed;\r\n    }\r\n\r\n    start() {\r\n        this.running = true;\r\n        if (typeof window === 'undefined') {\r\n            setTimeout(()=>{this.check();}, 16);\r\n        } else {\r\n            this.checker = requestAnimationFrame(this.check);\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this.running = false;\r\n        cancelAnimationFrame(this.checker);\r\n    }\r\n\r\n}\r\n\r\n\r\n//This only really matters in Chrome and one other browser\r\nexport function sortObjectByValue(object) { //Sorts number and string objects by numeric value. Strings have charcodes summed for comparison. Objects and functions are stringified.\r\n    var sortable = [];\r\n    for(var prop in object) {\r\n        sortable.push([prop, object[prop]]);\r\n    }\r\n\r\n    sortable.sort(function(a,b) {\r\n        var prop1 = a;\r\n        var prop2 = b;\r\n        if(typeof prop1[1] === \"function\"){\r\n            prop1[1] = prop1[1].toString();\r\n        }\r\n        else if(typeof prop1[1] === \"object\"){\r\n            prop1[1] = JSON.stringifyFast(prop1[1]);\r\n        }\r\n        if(typeof prop2[1] === \"function\"){\r\n            prop2[1] = prop2[1].toString();\r\n        }\r\n        else if(typeof prop2[1] === \"object\"){\r\n            prop2[1] = JSON.stringifyFast(prop2[1]);\r\n        }\r\n        \r\n        if(typeof prop1[1] === \"string\") {\r\n            var temp = 0;\r\n            prop1.forEach((char,i) => {\r\n                temp += prop1.charCodeAt(i);\r\n            });\r\n            prop1 = temp;\r\n        }\r\n        if(typeof prop2[1] === \"string\") {\r\n            var temp = 0;\r\n            prop2.forEach((char,i) => {\r\n                temp += prop2.charCodeAt(i);\r\n            });\r\n            prop2 = temp;\r\n        }\r\n        return prop1[1]-prop2[1];\r\n    });\r\n\r\n    var sorted = {};\r\n\r\n    sortable.forEach((item) => {\r\n       sorted[item[0]]=item[1];\r\n    });\r\n\r\n    return sorted;\r\n\r\n}\r\n\r\nexport function sortObjectByPropName(object) {\r\n\r\n    var sortable = [];\r\n\r\n    for(var prop in object) {\r\n        sortable.push([prop, object[prop]]);\r\n    }\r\n\r\n    sortable.sort(function(a,b) {\r\n        return a[0] > b[0];\r\n    });\r\n\r\n    var sorted = {};\r\n\r\n    sortable.forEach((item) => {\r\n        sorted[item[0]]=item[1];\r\n    });\r\n\r\n    return sorted;\r\n\r\n}\r\n\r\n//modified to also cut down the size arrays for faster looping\r\nif(JSON.stringifyFast === undefined) {\r\n    //Workaround for objects containing DOM nodes, which can't be stringified with JSON. From: https://stackoverflow.com/questions/4816099/chrome-sendrequest-error-typeerror-converting-circular-structure-to-json\r\n    JSON.stringifyFast = (function() {\r\n        const refs = new Map();\r\n        const parents = [];\r\n        const path = [\"this\"];\r\n\r\n        function clear() {\r\n            refs.clear();\r\n            parents.length = 0;\r\n            path.length = 1;\r\n        }\r\n\r\n        function updateParents(key, value) {\r\n            var idx = parents.length - 1;\r\n            if(parents[idx]){\r\n                var prev = parents[idx];\r\n                if(typeof prev === 'object') {\r\n                    if (prev[key] === value || idx === 0) {\r\n                        path.push(key);\r\n                        parents.push(value.pushed);\r\n                    } else {\r\n                        while (idx-- >= 0) {\r\n                            prev = parents[idx];\r\n                            if(typeof prev === 'object') {\r\n                                if (prev[key] === value) {\r\n                                    idx += 2;\r\n                                    parents.length = idx;\r\n                                    path.length = idx;\r\n                                    --idx;\r\n                                    parents[idx] = value;\r\n                                    path[idx] = key;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            idx--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function checkValues(key, value) {\r\n            let val;\r\n            if (value != null) {\r\n                if (typeof value === \"object\") {\r\n                    //if (key) { updateParents(key, value); }\r\n                    let c = value.constructor.name;\r\n                    if (key && c === 'Object') {updateParents(key, value); }\r\n\r\n                    let other = refs.get(value);\r\n                    if (other) {\r\n                        return '[Circular Reference]' + other;\r\n                    } else {\r\n                        refs.set(value, path.join('.'));\r\n                    }\r\n                    if(c === \"Array\") { //Cut arrays down to 100 samples for referencing\r\n                        if(value.length > 20) {\r\n                            val = value.slice(value.length-20);\r\n                        } else val = value;\r\n                       // refs.set(val, path.join('.'));\r\n                    }  \r\n                    else if (c.includes(\"Set\")) {\r\n                        val = Array.from(value)\r\n                    }  \r\n                    else if (c !== \"Object\" && c !== \"Number\" && c !== \"String\" && c !== \"Boolean\") { //simplify classes, objects, and functions, point to nested objects for the state manager to monitor those properly\r\n                        val = \"instanceof_\"+c;\r\n                    }\r\n                    else if (c === 'Object') {\r\n                        let obj = {};\r\n                        for(const prop in value) {\r\n                            if (value[prop] == null){\r\n                                obj[prop] = value[prop]; \r\n                            }\r\n                            else if(Array.isArray(value[prop])) { \r\n                                if(value[prop].length>20)\r\n                                    obj[prop] = value[prop].slice(value[prop].length-20); \r\n                                else obj[prop] = value[prop];\r\n                            } //deal with arrays in nested objects (e.g. means, slices)\r\n                            else if (value[prop].constructor.name === 'Object') { //additional layer of recursion for 3 object-deep array checks\r\n                                obj[prop] = {};\r\n                                for(const p in value[prop]) {\r\n                                    if(Array.isArray(value[prop][p])) {\r\n                                        if(value[prop][p].length>20)\r\n                                            obj[prop][p] = value[prop][p].slice(value[prop][p].length-20); \r\n                                        else obj[prop][p] = value[prop][p];\r\n                                    }\r\n                                    else { \r\n                                        if (value[prop][p] != null){\r\n                                            let con = value[prop][p].constructor.name;\r\n                                            if (con.includes(\"Set\")) {\r\n                                                obj[prop][p] = Array.from(value[prop][p])\r\n                                            } else if(con !== \"Number\" && con !== \"String\" && con !== \"Boolean\") {\r\n                                                obj[prop][p] = \"instanceof_\"+con; //3-deep nested objects are cut off\r\n                                            }  else {\r\n                                                obj[prop][p] = value[prop][p]; \r\n                                            }\r\n                                        } else {\r\n                                            obj[prop][p] = value[prop][p]; \r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else { \r\n                                let con = value[prop].constructor.name;\r\n                                if (con.includes(\"Set\")) {\r\n                                    obj[prop] = Array.from(value[prop])\r\n                                } else if(con !== \"Number\" && con !== \"String\" && con !== \"Boolean\") {\r\n                                    obj[prop] = \"instanceof_\"+con;\r\n                                } else {\r\n                                    obj[prop] = value[prop]; \r\n                                }\r\n                            }\r\n                        }\r\n                        //console.log(obj, value)\r\n                        val = obj;\r\n                        //refs.set(val, path.join('.'));\r\n                    }\r\n                    else {\r\n                        val = value;\r\n                    }\r\n                } else {\r\n                    val = value;\r\n                }\r\n            }\r\n            //console.log(value, val)\r\n            return val;\r\n        }\r\n\r\n        return function stringifyFast(obj, space) {\r\n            parents.push(obj);\r\n            let res = JSON.stringify(obj, checkValues, space);\r\n            clear();\r\n            return res;\r\n        }\r\n    })();\r\n}\r\n\r\n\r\n\r\nif(JSON.stringifyWithCircularRefs === undefined) {\r\n    //Workaround for objects containing DOM nodes, which can't be stringified with JSON. From: https://stackoverflow.com/questions/4816099/chrome-sendrequest-error-typeerror-converting-circular-structure-to-json\r\n    JSON.stringifyWithCircularRefs = (function() {\r\n        const refs = new Map();\r\n        const parents = [];\r\n        const path = [\"this\"];\r\n\r\n        function clear() {\r\n        refs.clear();\r\n        parents.length = 0;\r\n        path.length = 1;\r\n        }\r\n\r\n        function updateParents(key, value) {\r\n        var idx = parents.length - 1;\r\n        var prev = parents[idx];\r\n        if (prev[key] === value || idx === 0) {\r\n            path.push(key);\r\n            parents.push(value);\r\n        } else {\r\n            while (idx-- >= 0) {\r\n            prev = parents[idx];\r\n            if (prev[key] === value) {\r\n                idx += 2;\r\n                parents.length = idx;\r\n                path.length = idx;\r\n                --idx;\r\n                parents[idx] = value;\r\n                path[idx] = key;\r\n                break;\r\n            }\r\n            }\r\n        }\r\n        }\r\n\r\n        function checkCircular(key, value) {\r\n        if (value != null) {\r\n            if (typeof value === \"object\") {\r\n            if (key) { updateParents(key, value); }\r\n\r\n            let other = refs.get(value);\r\n            if (other) {\r\n                return '[Circular Reference]' + other;\r\n            } else {\r\n                refs.set(value, path.join('.'));\r\n            }\r\n            }\r\n        }\r\n        return value;\r\n        }\r\n\r\n        return function stringifyWithCircularRefs(obj, space) {\r\n        try {\r\n            parents.push(obj);\r\n            return JSON.stringify(obj, checkCircular, space);\r\n        } finally {\r\n            clear();\r\n        }\r\n        }\r\n    })();\r\n}\r\n\r\nexport default ObjectListener", "import ObjectListener from 'objectlisteners'\n\n//By Joshua Brewster (AGPL v3.0)\n\n/* \nconst htmlprops = {\n  id:'template1'\n};\n\nfunction templateStringGen(props) { //write your html in a template string\n    return `\n    <div id=${props.id}>Clickme</div>\n    `;\n}\n\nfunction onRender(props) { //setup html\n    document.getElementById(props.id).onclick = () => { \n      document.getElementById(props.id).innerHTML = \"Clicked!\"; \n    }\n}\n\nfunction onchange(props) { //optional if you want to be able to auto-update the html with changes to the properties, not recommended if you only want to update single divs\n  console.log('props changed!', props);\n}\n\nfunction ondelete(props) { //called before the node is deleted, use to clean up animation loops and event listeners\n}\n\nfunction onresize() { //adds a resize listener to the window, this is automatically cleaned up when you delete the node.\n}\n\nconst fragment = new DOMFragment(\n                        templateStringGen,\n                        document.body,\n                        htmlprops,\n                        onRender,\n                        undefined, //onchange\n                        \"NEVER\", //\"FRAMERATE\" //1000\n                        ondelete,\n                        onresize\n                      ); \n                      \n//... later ...\nfragment.deleteNode(); //deletes the rendered fragment if you are done with it.\n\n*/\n\nexport class DOMFragment {\n    /**\n     * @ignore\n     * @constructor\n     * @alias DOMFragment\n     * @description Create a DOM fragment.\n     * @param {function} templateStringGen - Function to generate template string (or template string itself, or Element)\n     * @param {HTMLElement} parentNode HTML DOM node to append fragment into.\n     * @param {callback} onRender Callback when element is rendered. Use to setup html logic via js\n     * @param {callback} onchange Callback when element is changed.\n     * @param {int} propUpdateInterval How often to update properties.\n     * @param {callback} ondelete Called just before the node is deleted (e.g. to clean up animations)\n     * @param {callback} onresize Called on window resize, leave undefined to not create resize events\n     */\n    constructor(templateStringGen=this.templateStringGen, parentNode=document.body, props={}, onRender=(props)=>{}, onchange=(props)=>{}, propUpdateInterval=\"NEVER\", ondelete=(props)=>{}, onresize=undefined) {\n        this.onRender = onRender;\n        this.onchange = onchange;\n        this.ondelete = ondelete;\n        this.onresize = onresize;\n\n        this.parentNode = parentNode;\n        if(typeof parentNode === \"string\") {\n            this.parentNode = document.getElementById(parentNode);\n        }\n        this.renderSettings = {\n            templateStringGen: templateStringGen,\n            props: props\n        }\n        this.props = this.renderSettings.props;\n        this.templateString = ``;\n        if(typeof templateStringGen === 'function') {\n            this.templateString = templateStringGen(props);\n        }\n        else {\n            this.templateString = templateStringGen;\n        }\n        \n        var interval = propUpdateInterval;\n        if(Object.keys(this.renderSettings.props).length === 0) {interval = \"NEVER\";}\n        this.node = null;\n\n        this.listener = undefined;\n    \n        if((Object.keys(this.renderSettings.props).length > 0) && !(interval === null || interval === undefined || interval === \"NEVER\")) {\n            console.log(\"making listeners for \", templateStringGen);\n            this.listener = new ObjectListener();\n\n            const templateChange = () => {\n                this.updateNode();\n            }\n\n            this.listener.addListener(\n                'templateChange',\n                this.renderSettings,\n                'templateStringGen',\n                templateChange, \n                interval\n                );\n\n            const propsChange = () => {\n                this.updateNode();\n                this.onchange();\n            }\n\n            this.listener.addListener(\n                'props',\n                this.renderSettings,\n                'props',\n                propsChange, \n                interval\n            );\n        }\n      \n        this.renderNode();\n\n    }\n\n    //called after a change in props are detected if interval is not set to \"NEVER\"\n    onchange = (props=this.renderSettings.props) => {}\n\n    //called after the html is rendered\n    onRender = (props=this.renderSettings.props) => {}\n\n    //called BEFORE the node is removed\n    ondelete = (props=this.renderSettings.props) => {}\n\n    onresize = undefined  //define resizing function\n\n    //appendId is the element Id you want to append this fragment to\n    appendFragment(toAppend, parentNode) {\n        if (this.isElement(toAppend)) parentNode.appendChild(toAppend);\n        else {\n            var template = document.createElement('template');\n            template.innerHTML = toAppend;\n            var fragment = template.content;\n            parentNode.appendChild(fragment);\n        }\n        return parentNode.children[parentNode.children.length-1];\n    }\n\n    isElement = (element) => {\n        return element instanceof Element || element instanceof HTMLDocument;  \n    }\n  \n    //delete selected fragment. Will delete the most recent fragment if Ids are shared.\n    deleteFragment(parentNode,nodeId) {\n        this.ondelete(this.renderSettings.props); //called BEFORE the node is removed\n        var node = document.getElementById(nodeId);\n        parentNode.removeChild(node);\n    }\n  \n    //Remove Element Parent By Element Id (for those pesky anonymous child fragment containers)\n    removeParent(elementId) {\n        // Removes an element from the document\n        if(typeof this.onresize === 'function') {\n            this.removeNodeResizing();\n        }\n        this.ondelete(this.renderSettings.props);\n        var element = document.getElementById(elementId);\n        element.parentNode.parentNode.removeChild(element.parentNode);\n    }\n\n    renderNode(parentNode=this.parentNode){\n        this.node = this.appendFragment(this.templateString,parentNode);\n        this.onRender(this.renderSettings.props);\n        if(typeof this.onresize === 'function') {\n            this.setNodeResizing();\n        }\n    }\n\n    setNodeResizing() {\n        if(typeof this.onresize === 'function') {\n            if(window.attachEvent) {\n                window.attachEvent('onresize', this.onresize);\n            }\n            else if(window.addEventListener) {\n                window.addEventListener('resize', this.onresize, true);\n            }\n        }\n    }\n\n    removeNodeResizing() {\n        if(typeof this.onresize === 'function') {\n            if(window.detachEvent) {\n                window.detachEvent('onresize', this.onresize);\n            }\n            else if(window.removeEventListener) {\n                window.removeEventListener('resize', this.onresize, true);\n            }\n        }\n    }\n\n    updateNode(parentNode=this.parentNode, node=this.node, props=this.props){\n        parentNode.removeChild(node);\n        if(typeof this.renderSettings.templateStringGen === 'function') {\n            this.templateString = this.renderSettings.templateStringGen(this.props);\n        }\n        else {\n            this.templateString = this.renderSettings.templateStringGen;\n        }\n        this.renderNode(parentNode, props);\n    }\n\n    deleteNode(node=this.node) {\n        if(typeof this.onresize === 'function') {\n            this.removeNodeResizing();\n        }\n        if(typeof node === \"string\"){\n            this.ondelete(this.renderSettings.props);\n            thisNode = document.getElementById(node);\n            thisNode.parentNode.removeChild(thisNode);\n            this.node = null;\n        }\n        else if(typeof node === \"object\"){\n            this.ondelete(this.renderSettings.props);\n            if (node) node.parentNode.removeChild(node);\n            this.node = null;\n        }\n    }\n\n    //Add a scoped stylesheet after begin\n    appendStylesheet(styles=\"\", node=this.node) {\n        if(typeof styles === 'string') {\n            var link = document.createElement('link');\n            link.rel = \"stylesheet\";\n            link.type = \"text/css\";\n            link.href = styles;\n\n            node.insertAdjacentElement('afterbegin',link);\n        }\n        else if (Array.isArray(styles)) {\n            styles.forEach((style) => {\n                var link = document.createElement('link');\n                link.rel = \"stylesheet\";\n                link.type = \"text/css\";\n                link.href = style;\n\n                node.insertAdjacentElement('afterbegin',link);\n            });\n        }\n        else if (typeof styles === 'function') {\n            let styleResult = styles();\n\n            if (node){\n                if (typeof styleResult === 'string') node.insertAdjacentHTML('afterbegin',styleResult);\n                else node.insertAdjacentElement('afterbegin',styleResult);\n            }\n        }\n    }\n}\n\nexport default DOMFragment", "\r\n//By Joshua Brewster (MIT License). Buffer Loader was in an audio tutorial I found on HTML5 Rocks. \r\n\r\n//TODO:\r\n/*\r\n  - MIDI web context support\r\n  - Seeking for audio buffer source nodes\r\n     -- How: copy audio buffer, stop old node, start new one at time X.\r\n*/\r\nexport class SoundJS { //Only one Audio context at a time!\r\n    constructor(){\r\n      window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;\r\n      \r\n      this.ctx = null;\r\n      try {\r\n        this.ctx = new AudioContext();\r\n      } catch (e) {\r\n        alert(\"Your browser does not support AudioContext!\");\r\n        console.log(e);\r\n      } \r\n      \r\n      this.sourceList = [];\r\n      this.sourceGains = [];\r\n      \r\n      this.recordedData = [];\r\n      this.recorder = null;\r\n      this.buffer = [];\r\n  \r\n      this.osc = [];\r\n      this.gainNode = this.ctx.createGain();\r\n      this.analyserNode = this.ctx.createAnalyser();\r\n      this.out = this.ctx.destination;\r\n      this.gainNode.connect(this.analyserNode);\r\n      this.analyserNode.connect(this.out);\r\n      \r\n    }\r\n  \r\n    playFreq(freq=[1000], seconds=0, type='sine', startTime=this.ctx.currentTime){ //Oscillators are single use items. Types: sine, square, sawtooth, triangle, or custom via setPeriodicWave()\r\n      freq.forEach((element)=>{\r\n        var len = this.osc.length;\r\n          this.osc[len] = this.ctx.createOscillator();\r\n          this.osc[len].start();\r\n          this.osc[len].onended = () => {\r\n            this.osc[len].disconnect();\r\n            this.osc.splice(len,1);\r\n          }\r\n        this.osc[len].type = type;\r\n        this.osc[len].connect(this.gainNode);\r\n        this.osc[len].frequency.setValueAtTime(element, startTime);\r\n        if(seconds!=0){\r\n          //0 = unlimited \r\n          this.osc[len].stop(startTime+seconds);\r\n        }\r\n      });\r\n    }\r\n  \r\n    stopFreq(firstIndex=0, number=1, delay=0){//Stops and removes the selected oscillator(s). Can specify delay.\r\n      for(var i = firstIndex; i<number; i++){\r\n        if(this.osc[oscIndex]){\r\n          this.osc[oscIndex].stop(this.ctx.currentTime+delay);\r\n        }\r\n        else{\r\n          console.log(\"No oscillator found.\")\r\n        }\r\n      }\r\n    }\r\n  \r\n    //Add a sound file from the app assets or a website url\r\n    addSounds(urlList=[''], onReady=(sourceListIdx)=>{}, onBeginDecoding=()=>{}, canAddFile=false){\r\n      if(typeof urlList === 'string') urlList = [urlList];\r\n      var bufferLoader = new BufferLoader(this, urlList, this.finishedLoading, onReady, onBeginDecoding)\r\n      bufferLoader.load(canAddFile);\r\n    }\r\n\r\n    //Make a copy of selected sound buffer\r\n    copySound(soundbuffer) {\r\n      let buf = this.ctx.createBuffer(soundbuffer.buffers.length,soundbuffer.duration/soundbuffer.samplerate,soundbuffer.samplerate);\r\n      soundbuffer.buffers.forEach((b,j) => {\r\n          if(typeof b === 'string') buf.copyToChannel(Float32Array.from(textdecoder.decode(b)),j+1,0); //parse string\r\n          else buf.copyToChannel(b,j+1,0); //parse raw Float32Array\r\n      });\r\n\r\n      let newSourceIndices = this.finishedLoading([buf]);\r\n      return newSourceIndices[0];\r\n    }\r\n\r\n    //Get a file off the user's computer and decode it into the sound system\r\n    decodeLocalAudioFile(onReady=(sourceListIdx)=>{}, onBeginDecoding=()=>{}){\r\n\r\n      var input = document.createElement('input');\r\n      input.type = 'file';\r\n      input.accept = 'audio/*';\r\n\r\n      input.onchange = (e) => {\r\n        if(e.target.files.length !== 0){\r\n          var file = e.target.files[0];\r\n          var fr = new FileReader();\r\n          fr.onload = (ev) => {\r\n              var fileResult = ev.target.result;\r\n              if (this.ctx === null) {\r\n                  return;\r\n              };\r\n              onBeginDecoding();\r\n              this.ctx.decodeAudioData(fileResult, (buffer) => {\r\n                this.finishedLoading([buffer]);\r\n                onReady(this.sourceList.length-1);\r\n              }, (er) => {\r\n                  console.error(er);\r\n              });\r\n          };\r\n          fr.onerror = function(er) {\r\n              console.error(er);\r\n          };\r\n          //assign the file to the reader\r\n          fr.readAsArrayBuffer(file);\r\n        }\r\n      }\r\n      input.click();\r\n    }\r\n\r\n    finishedLoading = (bufferList) => {\r\n      let newBufferSourceIndices = [];\r\n      bufferList.forEach((element) => {\r\n        this.sourceList.push(this.ctx.createBufferSource()); \r\n        var idx = this.sourceList.length - 1;\r\n        newBufferSourceIndices.push(idx);\r\n        let sauce = this.sourceList[idx];\r\n        this.sourceGains.push(this.ctx.createGain()); //Allows control of individual sound file volumes\r\n        let gainz = this.sourceGains[idx];\r\n        sauce.buffer = element;\r\n        sauce.onended = () => {\r\n          sauce.disconnect();\r\n          gainz.disconnect();\r\n          let l = 0, k=0;\r\n          this.sourceList.find((o,j)=> {\r\n            if(JSON.stringify(o) === JSON.stringify(sauce)) {\r\n              l=j;\r\n              this.sourceList.splice(l,1);\r\n              return true;\r\n            }\r\n          });\r\n          this.sourceGains.find((o,j)=> {\r\n            if(JSON.stringify(o) === JSON.stringify(gainz)) {\r\n              k=j;\r\n              this.sourceGains.splice(k,1);\r\n              return true;\r\n            }\r\n          });\r\n        };\r\n        sauce.connect(gainz); //Attach to volume node\r\n        gainz.connect(this.gainNode);\r\n      });\r\n      return newBufferSourceIndices;\r\n    }\r\n  \r\n    playSound(bufferIndex, seconds=0, repeat=false, startTime=this.ctx.currentTime){ //Plays sounds loaded in buffer by index. Sound buffers are single use items.\r\n      if(repeat === true){\r\n        this.sourceList[bufferIndex].loop = true;\r\n      }\r\n      \r\n      this.sourceList[bufferIndex].start(startTime);\r\n      if(seconds !== 0){\r\n        this.sourceList[bufferIndex].stop(startTime+seconds);\r\n      }\r\n    }\r\n  \r\n    stopSound(bufferIndex){\r\n      if(this.sourceList[bufferIndex])\r\n        this.sourceList[bufferIndex].stop(0);\r\n    }\r\n  \r\n    setPlaybackRate(bufferIndex, rate){\r\n      if(this.sourceList[bufferIndex])\r\n        this.sourceList[bufferIndex].playbackRate.value = rate;\r\n    }\r\n  \r\n    record(name = new Date().toISOString(), args={audio:true, video:false}, type=null, streamElement=null, save=false,onbegin=()=>{}){ // video settings vary e.g. video:{width:{min:1024,ideal:1280,max:1920},height:{min:576,ideal:720,max:1080}}\r\n      /*\r\n      navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n        devices = devices.filter((d) => d.kind === 'audioinput');\r\n        devices.forEach(function(device) {\r\n          let menu = elm(\"inputdevices\");\r\n          if (device.kind === \"audioinput\") {\r\n            let item = document.createElement(\"option\");\r\n            item.innerHTML = device.label;\r\n            item.value = device.deviceId;\r\n            menu.appendChild(item);\r\n            }\r\n        });\r\n      }); //Device selection\r\n  \r\n      navigator.permissions.query({name:'microphone'}).then(function(result) {\r\n        if (result.state === 'granted') {\r\n  \r\n        } else if (result.state === 'prompt') {\r\n  \r\n        } else if (result.state === 'denied') {\r\n  \r\n        }\r\n        result.onchange = function() {\r\n  \r\n        };\r\n      });\r\n      */\r\n      var supported = null;\r\n      var ext = null;\r\n      var types = type;\r\n      if (types === null) {\r\n        if (args.video !== false) {\r\n          types = [\r\n            'video/webm',\r\n            'video/webm;codecs=vp8',\r\n            'video/webm;codecs=vp9',\r\n            'video/webm;codecs=vp8.0',\r\n            'video/webm;codecs=vp9.0',\r\n            'video/webm;codecs=h264',\r\n            'video/webm;codecs=H264',\r\n            'video/webm;codecs=avc1',\r\n            'video/webm;codecs=vp8,opus',\r\n            'video/WEBM;codecs=VP8,OPUS',\r\n            'video/webm;codecs=vp9,opus',\r\n            'video/webm;codecs=vp8,vp9,opus',\r\n            'video/webm;codecs=h264,opus',\r\n            'video/webm;codecs=h264,vp9,opus',\r\n            'video/x-matroska;codecs=avc1'\r\n          ];\r\n        } else if (args.audio === true) {\r\n          types = [\r\n            'audio/wav', // might be supported native, otherwise see:\r\n            'audio/mp3', // probably not supported\r\n            'audio/webm',\r\n            'audio/webm;codecs=opus',\r\n            'audio/webm;codecs=pcm',\r\n            'audio/ogg',\r\n            'audio/x-matroska' // probably not supported\r\n          ];\r\n        }\r\n      }\r\n  \r\n      for (var i=0; i<types.length; i++) {\r\n        if(MediaRecorder.isTypeSupported(types[i]) === true){\r\n          supported = types[i];\r\n          console.log(\"Supported type: \", supported);\r\n          if(types[i].indexOf('webm') !== -1){\r\n            ext = '.webm';\r\n          }\r\n          if(types[i].indexOf('ogg') !== -1){\r\n            ext = '.ogg';\r\n          }\r\n          if(types[i].indexOf('mp3') !== -1){\r\n            ext = '.mp3';\r\n          }\r\n          if(types[i].indexOf('wav') !== -1){\r\n            ext = '.wav';\r\n          }\r\n          if(types[i].indexOf('x-matroska') !== -1){\r\n            ext = '.mkv';\r\n          }\r\n          break;\r\n        }\r\n      }\r\n  \r\n      if (supported !== null) {\r\n        function errfunc(e) {\r\n          console.log(e);\r\n        } \r\n  \r\n        navigator.mediaDevices.getUserMedia(args).then((recordingDevice) => { //Get\r\n          console.log(\"Media stream created.\");\r\n          \r\n          if(supported.indexOf('audio') !== -1) {\r\n            let mic_src = this.ctx.createMediaStreamSource(recordingDevice);\r\n            let mic_gain = this.ctx.createGain();\r\n\r\n            this.sourceList.push(mic_src);\r\n            this.sourceGains.push(mic_gain);\r\n\r\n            mic_src.onended = () => {\r\n              mic_src.disconnect();\r\n              mic_gain.disconnect();\r\n              let l = 0, k=0;\r\n              this.sourceList.find((o,j)=> {\r\n                if(JSON.stringify(o) === JSON.stringify(mic_src)) {\r\n                  l=j;\r\n                  this.sourceList.splice(l,1);\r\n                  return true;\r\n                }\r\n              }); \r\n              this.sourceGains.find((o,j)=> {\r\n                if(JSON.stringify(o) === JSON.stringify(mic_gain)) {\r\n                  k=j;\r\n                  this.sourceGains.splice(k,1);\r\n                  return true;\r\n                }\r\n              }); \r\n            }\r\n\r\n            mic_src.connect(mic_gain);\r\n            mic_gain.connect(this.analyserNode);\r\n            //mic_src.start();\r\n          }\r\n\r\n          onbegin();\r\n\r\n          if(streamElement !== null){ // attach to audio or video element, or Audio(). For canvas, use an AudioContext analyzer.\r\n            streamElement.src = window.URL.createObjectURL(recordingDevice);\r\n          }  \r\n\r\n          if(save === true) {\r\n  \r\n            this.recorder = new MediaRecorder(recordingDevice);\r\n    \r\n            this.recorder.onstop = (e) => {\r\n              console.log(\"Media recorded, saving...\");\r\n    \r\n              var blob = new Blob(this.recordedData, {\r\n                type: supported\r\n              });\r\n    \r\n              var url = URL.createObjectURL(blob);\r\n              var a = document.createElement(\"a\");\r\n              document.body.appendChild(a);\r\n              a.style = \"display: none\";\r\n              a.href = url;\r\n              a.download = name + ext;\r\n              a.click();\r\n              window.URL.revokeObjectURL(url);\r\n            }\r\n            \r\n            this.recorder.ondataavailable = (e) => {\r\n              this.recordedData.push(e.data);\r\n            }\r\n    \r\n            this.recorder.start(); //Begin recording\r\n          }\r\n  \r\n        }, errfunc);\r\n  \r\n        return this.sourceList.length;\r\n      }\r\n      else {\r\n        alert(\"Cannot record! Check function call settings, ensure browser is compatible.\");\r\n        return undefined;\r\n      }\r\n    }\r\n  \r\n    replayRecording(streamElement) { //Replay the currently buffered recording in an acceptable stream element, e.g. attach to audio or video element, or an Audio() class, or a video element. For canvas, use an AudioContext analyzer.\r\n      if(this.recordedData.length > 1){\r\n        this.buffer = new Blob(this.recordedData);\r\n        streamElement.src = window.URL.createObjectURL(buffer);\r\n      }\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  \r\n//Parse Audio file buffers\r\nexport class BufferLoader { //Modified from HTML5 Rocks tutorial\r\n  constructor(SoundJSInstance, urlList, callback, onReady=(sourceListIdx)=>{}, onBeginDecoding=()=>{}){\r\n    this.audio = SoundJSInstance;\r\n   this.ctx = this.audio.ctx;\r\n   this.urlList = urlList;\r\n   this.onload = callback;\r\n   this.bufferList = new Array();\r\n   this.loadCount = 0;\r\n   this.onBeginDecoding = onBeginDecoding;\r\n   this.onReady = onReady;\r\n  }\r\n\r\n  onReady = (sourceListIdx) => {}\r\n\r\n  onBeginDecoding = () => {}\r\n\r\n  loadBuffer(url='',index, canAddFile=false){\r\n   // Load buffer asynchronously\r\n   var request = new XMLHttpRequest();\r\n   request.responseType = \"arraybuffer\";\r\n   var responseBuf = null;\r\n\r\n   if(url.length > 1){\r\n       request.open(\"GET\", url, true);\r\n       request.onreadystatechange = () => {\r\n         if(request.readyState === 4){\r\n           if(request.status === 200 || request.status === 0){\r\n             responseBuf = request.response; //Local files work on a webserver with request\r\n           }\r\n         }\r\n       }\r\n     var loader = this;\r\n\r\n     request.onload = () => {\r\n       // Asynchronously decode the audio file data in request.response\r\n       this.onBeginDecoding();\r\n       loader.ctx.decodeAudioData(\r\n         responseBuf,\r\n         (buffer) => {\r\n           if (!buffer) {\r\n             alert('error decoding file data: ' + url);\r\n             return;\r\n           }\r\n           loader.bufferList[index] = buffer;\r\n           if (++loader.loadCount === loader.urlList.length)\r\n             loader.onload(loader.bufferList);\r\n             this.onReady(this.audio.sourceList.length-1);\r\n         },\r\n         (error) => {\r\n           console.error('decodeAudioData error: '+ error + \", from url: \"+ url);\r\n         }\r\n       );\r\n     }\r\n     request.onerror = function() {\r\n       alert('BufferLoader: XHR error');\r\n     }\r\n   \r\n     request.send();\r\n   }\r\n   else if(canAddFile){//Local Audio\r\n     //read and decode the file into audio array buffer \r\n     var loader = this;\r\n     var fr = new FileReader();\r\n     fr.onload = (e) => {\r\n         var fileResult = e.target.result;\r\n         var audioContext = loader.ctx;\r\n         if (audioContext === null) {\r\n             return;\r\n         }\r\n         console.log(\"Decoding audio...\");\r\n         this.onBeginDecoding();\r\n         audioContext.decodeAudioData(fileResult, (buffer) => {\r\n           if (!buffer) {\r\n             alert('Error decoding file data: ' + url);\r\n             return;\r\n           }\r\n           else{\r\n             console.log('File decoded successfully!')\r\n           }\r\n           loader.bufferList[index] = buffer;\r\n           if (++loader.loadCount === loader.urlList.length)\r\n             loader.onload(loader.bufferList);\r\n             this.onReady(this.audio.sourceList.length-1);\r\n           },\r\n           (error) => {\r\n             console.error('decodeAudioData error: ', error);\r\n           }\r\n         );\r\n     }\r\n     fr.onerror = (e) => {\r\n         console.log(e);\r\n     }\r\n     \r\n     var input = document.createElement('input');\r\n     input.type = 'file';\r\n     input.multiple = true;\r\n\r\n     input.onchange = e => {\r\n       fr.readAsArrayBuffer(e.target.files[0]);\r\n       input.value = '';\r\n       }\r\n     input.click();\r\n   }\r\n\r\n }\r\n\r\n load(canAddFile = true){\r\n   for (var i = 0; i < this.urlList.length; ++i)\r\n   this.loadBuffer(this.urlList[i], i, canAddFile);\r\n }\r\n \r\n}", "//Microphone-based Breath Capture\r\n//Joshua Brewster - MIT License\r\n\r\nimport {SoundJS} from './Sound'\r\n/* How to use\r\n\r\nlet Capture = new BreathCapture();\r\nCapture.analyze();\r\nCapture.connectMic();\r\n\r\n//Manually calibrate to correct the capture. Do this ~1 sec after breathing in.\r\nCapture.calibrate();\r\n\r\n//Outputs captured in this object as arrays\r\n//More fine grained data are in the class\r\nCapture.output = {\r\n    belowThreshold: false,              //Are the detected breathing peaks below the mean threshold (too quiet?) //bool\r\n    isHolding: false,                   //Is the user between an in and out breath?     //bool\r\n    inVolumes: this.inPeakVolumes,      //summed fft volume of in-breath                //float array\r\n    outVolumes: this.outPeakVolumes,    //summed fft volume of out-breath               //float array\r\n    inTimes: this.inPeakTimes,          //timestamps of in-breaths                      //unix ms timestamp array\r\n    outTimes: this.outPeakTimes,        //timestamps of out-breaths                     //unix ms timestamp array\r\n    inToOutTimes: this.inToOutTimes,    //timeframe between out- and in-breaths         //ms int array\r\n    fastTimes: this.fastPeakTimes,      //timestamps of the fast sma peaks              //unix ms timestamp array\r\n    fastRate: this.fastPeakDt,          //For fast breathing look for coherent breaths  //ms int array\r\n    breathRate: this.breathingRate,     //look for coherent breaths                     //ms int array\r\n    brv: this.breathingRateVariability,  //Lower is better                               //ms int array\r\n    audioFFT: this.output.audioFFT,\r\n    fastSmoothedVolume: this.audSumSmoothedFast,\r\n    slowSmoothedVolume: this.audSumSmoothedSlow,\r\n    longSmoothedVolume: this.audSumSmoothedLong\r\n};\r\n\r\n*/\r\n\r\nexport class BreathCapture {\r\n    constructor (onUpdate=()=>{},onBreath=()=>{}) {\r\n        this.effects = [];\r\n        this.fxStruct = {sourceIdx:undefined,source:undefined,playing:false,id:undefined};\r\n        \r\n        this.onUpdate = onUpdate;\r\n        this.onBreath = onBreath;\r\n\r\n        this.audsum = 0;\r\n       \r\n        this.peaksfast = [];\r\n        this.valsfast = [];\r\n        this.peaksslow = [];\r\n        this.valsslow = [];\r\n        this.peakslong = [];\r\n        this.valslong = [];\r\n        \r\n        this.audSumGraph = new Array(1024).fill(0);\r\n        this.audSumSmoothedFast = new Array(1024).fill(0);\r\n        this.audSumSmoothedSlow = new Array(1024).fill(0);\r\n        this.audSumSmoothedLong = new Array(1024).fill(0);\r\n        this.audSpect = new Array(1024).fill(new Array(512).fill(0));\r\n        this.audTime = new Array(1024).fill(0);\r\n\r\n        this.lastInPeak = 0;\r\n        this.lastOutPeak = 0;\r\n        \r\n        this.fastPeakTimes = [];\r\n        this.fastPeakDt = [];\r\n        this.slowPeakTimes = [];\r\n        this.longPeakTimes = [];\r\n\r\n        this.peakThreshold = 0;\r\n        this.wasBelowThreshold = false;\r\n\r\n        this.inPeakVolumes = [];\r\n        this.outPeakVolumes = [];\r\n        this.inPeakTimes = []; //Timestamp of in-breath\r\n        this.outPeakTimes = []; //Timestamp of out=breath\r\n        this.inToOutTimes = [];\r\n        this.breathingRate = []; //Avg difference between most recent breathing peaks\r\n        this.breathingRateVariability = []; //Difference between breathing rates\r\n\r\n        //Simplified output reference.\r\n        this.output = {\r\n            belowThreshold: false,              //Are the detected breathing peaks below the mean threshold (too quiet?)\r\n            isHolding: false,                   //Is the user between an in and out breath?\r\n            inVolumes: this.inPeakVolumes,      //summed fft volume of in-breath\r\n            outVolumes: this.outPeakVolumes,    //summed fft volume of out-breath\r\n            inTimes: this.inPeakTimes,          //timestamps of in-breaths\r\n            outTimes: this.outPeakTimes,        //timestamps of out-breaths\r\n            inToOutTimes: this.inToOutTimes,    //timeframe between out- and in-breaths\r\n            fastTimes: this.fastPeakTimes,      //timestamps of the fast sma peaks\r\n            fastRate: this.fastPeakDt,          //For fast breathing look for coherent breaths\r\n            breathRate: this.breathingRate,     //look for coherent breaths\r\n            brv: this.breathingRateVariability,  //Lower is better\r\n            audioFFT: [],\r\n            fastSmoothedVolume: this.audSumSmoothedFast,\r\n            slowSmoothedVolume: this.audSumSmoothedSlow,\r\n            longSmoothedVolume: this.audSumSmoothedLong\r\n        };\r\n\r\n\r\n        this.analyzing = false;\r\n    }\r\n\r\n    analyze=() => {\r\n        if(this.analyzing === false) {\r\n            this.analyzing = true;\r\n            this.loop();\r\n        }\r\n    }\r\n\r\n    resetVars = () => {\r\n\r\n        this.audsum = 0;\r\n       \r\n        this.peaksfast = [];\r\n        this.valsfast = [];\r\n        this.peaksslow = [];\r\n        this.valsslow = [];\r\n        this.peakslong = [];\r\n        this.valslong = [];\r\n        \r\n        this.audSumGraph = new Array(1024).fill(0);\r\n        this.audSumSmoothedFast = new Array(1024).fill(0);\r\n        this.audSumSmoothedSlow = new Array(1024).fill(0);\r\n        this.audSumSmoothedLong = new Array(1024).fill(0);\r\n        this.audSpect = new Array(1024).fill(new Array(250).fill(0));\r\n        this.audTime = new Array(1024).fill(0);\r\n\r\n        this.lastInPeak = 0;\r\n        this.lastOutPeak = 0;\r\n        \r\n        this.fastPeakTimes = [];\r\n        this.fastPeakDt = [];\r\n        this.slowPeakTimes = [];\r\n        this.longPeakTimes = [];\r\n\r\n        this.peakThreshold = 0;\r\n        this.wasBelowThreshold = false;\r\n\r\n        this.inPeakVolumes = [];\r\n        this.outPeakVolumes = [];\r\n        this.inPeakTimes = []; //Timestamp of in-breath\r\n        this.outPeakTimes = []; //Timestamp of out=breath\r\n        this.inToOutTimes = [];\r\n        this.breathingRate = []; //Avg difference between most recent breathing peaks\r\n        this.breathingRateVariability = []; //Difference between breathing rates\r\n\r\n        this.resetOutput();\r\n    }\r\n\r\n    resetOutput = () => {\r\n        //Simplified output reference.\r\n        this.output = {\r\n            belowThreshold: false,              //Are the detected breathing peaks below the mean threshold (too quiet?)\r\n            isHolding: false,                   //Is the user between an in and out breath?\r\n            inVolumes: this.inPeakVolumes,      //summed fft volume of in-breath\r\n            outVolumes: this.outPeakVolumes,    //summed fft volume of out-breath\r\n            inTimes: this.inPeakTimes,          //timestamps of in-breaths\r\n            outTimes: this.outPeakTimes,        //timestamps of out-breaths\r\n            inToOutTimes: this.inToOutTimes,    //timeframe between out- and in-breaths\r\n            fastTimes: this.fastPeakTimes,      //timestamps of the fast sma peaks\r\n            fastRate: this.fastPeakDt,          //For fast breathing look for coherent breaths\r\n            breathRate: this.breathingRate,     //look for coherent breaths\r\n            brv: this.breathingRateVariability,  //Lower is better\r\n            audioFFT: [],\r\n            fastSmoothedVolume: this.audSumSmoothedFast,\r\n            slowSmoothedVolume: this.audSumSmoothedSlow,\r\n            longSmoothedVolume: this.audSumSmoothedLong\r\n        };\r\n\r\n    }\r\n\r\n    stop=()=>{\r\n        this.analyzing = false;\r\n    }\r\n\r\n    connectMic() {\r\n        if(this.effects.length === 0) {\r\n            if(!window.audio) window.audio = new SoundJS();\r\n            if (window.audio.ctx===null) {return;};\r\n\r\n            let fx = JSON.parse(JSON.stringify(this.fxStruct));\r\n\r\n            fx.sourceIdx = window.audio.record(undefined,undefined,null,null,false,()=>{\r\n                if(fx.sourceIdx !== undefined) {\r\n                    fx.source = window.audio.sourceList[window.audio.sourceList.length-1];\r\n                    //window.audio.sourceGains[fx.sourceIdx].gain.value = 0;\r\n                    fx.playing = true;\r\n                    fx.id = 'Micin';\r\n                    //fx.source.mediaStream.getTracks()[0].enabled = false;\r\n                }\r\n            });\r\n\r\n            this.effects.push(fx);\r\n\r\n            try {\r\n                window.audio.gainNode.disconnect(window.audio.analyserNode);\r\n                window.audio.analyserNode.disconnect(window.audio.out);\r\n                window.audio.gainNode.connect(window.audio.out);\r\n            } catch (er) {}\r\n            return fx;\r\n        }\r\n    }\r\n\r\n    stopMic() {\r\n        if(this.effects.length === 1) {\r\n            let idx;\r\n            let found = this.effects.find((o,i) => {\r\n                if(o.id === 'Micin') {\r\n                    idx=i;\r\n                    return true;\r\n                }\r\n            });\r\n            if(found) {\r\n                found.source.mediaStream.getTracks()[0].stop();\r\n                this.effects.splice(idx,1);\r\n            }\r\n\r\n            try{ \r\n                window.audio.gainNode.disconnect(window.audio.out);\r\n                window.audio.gainNode.connect(window.audio.analyserNode);\r\n                window.audio.analyserNode.connect(window.audio.out);\r\n            } catch(er) {}\r\n        }\r\n    }\r\n\r\n    getAudioData() {\r\n        let audioDat = [];\r\n        if(window.audio){\r\n            var array = new Uint8Array(window.audio.analyserNode.frequencyBinCount); //2048 samples\r\n            window.audio.analyserNode.getByteFrequencyData(array);\r\n            audioDat = this.reduceArrByFactor(Array.from(array),4);\r\n        } else {\r\n            audioDat = new Array(512).fill(0);\r\n        }\r\n\r\n        return audioDat;\r\n    }\r\n\r\n    sum(arr=[]){\r\n\t\tif (arr.length > 0){\r\n\t\t\tvar sum = arr.reduce((prev,curr)=> curr += prev);\r\n\t\treturn sum;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\r\n    mean(arr=[]){\r\n\t\tif (arr.length > 0){\r\n\t\t\tvar sum = arr.reduce((prev,curr)=> curr += prev);\r\n\t\treturn sum / arr.length;\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t}\r\n\r\n    reduceArrByFactor(arr,factor=2) { //faster than interpolating\r\n        let x = arr.filter((element, index) => {\r\n            return index % factor === 0;\r\n        });\r\n        return x;\r\n    }\r\n\r\n    //Input data and averaging window, output array of moving averages (should be same size as input array, initial values not fully averaged due to window)\r\n    sma(arr, window) {\r\n\t\tvar smaArr = []; //console.log(arr);\r\n\t\tfor(var i = 0; i < arr.length; i++) {\r\n\t\t\tif((i == 0)) {\r\n\t\t\t\tsmaArr.push(arr[0]);\r\n\t\t\t}\r\n\t\t\telse if(i < window) { //average partial window (prevents delays on screen)\r\n\t\t\t\tvar arrslice = arr.slice(0,i+1);\r\n\t\t\t\tsmaArr.push(arrslice.reduce((previous,current) => current += previous ) / (i+1));\r\n\t\t\t}\r\n\t\t\telse { //average windows\r\n\t\t\t\tvar arrslice = arr.slice(i-window,i);\r\n\t\t\t\tsmaArr.push(arrslice.reduce((previous,current) => current += previous) / window);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//console.log(temp);\r\n\t\treturn smaArr;\r\n\t}\r\n\r\n    //Sum the FFT (gets envelope)\r\n    sumAudioData() {\r\n        let audioDat = this.getAudioData();\r\n        let sum = this.sum(audioDat);\r\n        return sum;\r\n    }\r\n\r\n    //Make an array of size n from a to b \r\n    makeArr(startValue, stopValue, nSteps) {\r\n        var arr = [];\r\n        var step = (stopValue - startValue) / (nSteps - 1);\r\n        for (var i = 0; i < nSteps; i++) {\r\n          arr.push(startValue + (step * i));\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    isExtrema(arr,critical='peak') { //Checks if the middle point of the (odd-numbered) array is a local extrema. options: 'peak','valley','tangent'. Even numbered arrays are popped\r\n        let ref = [...arr];\r\n\t\tif(ref.length%2 === 0) ref.pop();\r\n        if(arr.length > 1) { \r\n            let pass = true;\r\n            for(let i = 0; i < ref.length; i++) {\r\n                let val = ref[i];\r\n                if(critical === 'peak') { //search first derivative\r\n                    if(i < Math.floor(ref.length*.5) && val >= ref[Math.floor(ref.length*.5)] ) {\r\n                        pass = false;\r\n                        break;\r\n                    } else if (i > Math.floor(ref.length*.5) && val >= ref[Math.floor(ref.length*.5)]) {\r\n                        pass = false;\r\n                        break;\r\n                    }\r\n                } else if (critical === 'valley') { //search first derivative\r\n                    if(i < Math.floor(ref.length*.5) && val <= ref[Math.floor(ref.length*.5)] ) {\r\n                        pass = false;\r\n                        break;\r\n                    } else if (i > Math.floor(ref.length*.5) && val <= ref[Math.floor(ref.length*.5)]) {\r\n                        pass = false;\r\n                        break;\r\n                    }\r\n                } else { //look for tangents (best with 2nd derivative usually)\r\n                    if((i < Math.floor(ref.length*.5) && val <= ref[Math.floor(ref.length*.5)] )) {\r\n                        pass = false;\r\n                        break;\r\n                    } else if ((i > Math.floor(ref.length*.5) && val <= ref[Math.floor(ref.length*.5)])) {\r\n                        pass = false;\r\n                        break;\r\n                    }\r\n                } //|| (i < ref.length*.5 && val <= 0 ) || (i > ref.length*.5 && val > 0)\r\n            }\r\n            if(critical !== 'peak' && critical !== 'valley' && pass === false) {\r\n                pass = true;\r\n                for(let i = 0; i < ref.length; i++) {\r\n                    let val = ref[i];\r\n                    if((i <  Math.floor(ref.length*.5) && val >= ref[Math.floor(ref.length*.5)] )) {\r\n                        pass = false;\r\n                        break;\r\n                    } else if ((i >  Math.floor(ref.length*.5) && val >= ref[Math.floor(ref.length*.5)])) {\r\n                        pass = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return pass;\r\n        } else return undefined;\r\n    }\r\n\r\n    isCriticalPoint(arr,critical='peak') { //Checks if the middle point of the (odd-numbered) array is a critical point. options: 'peak','valley','tangent'. Even numbered arrays are popped\r\n        let ref = [...arr];\r\n\t\tif(ref.length%2 === 0) ref.pop();\r\n        if(arr.length > 1) { \r\n            let pass = true;\r\n            for(let i = 0; i < ref.length; i++) {\r\n                let val = ref[i];\r\n                if(critical === 'peak') { //search first derivative\r\n                    if(i < ref.length*.5 && val <= 0 ) {\r\n                        pass = false;\r\n                        break;\r\n                    } else if (i > ref.length*.5 && val > 0) {\r\n                        pass = false;\r\n                        break;\r\n                    }\r\n                } else if (critical === 'valley') { //search first derivative\r\n                    if(i < ref.length*.5 && val >= 0 ) {\r\n                        pass = false;\r\n                        break;\r\n                    } else if (i > ref.length*.5 && val < 0) {\r\n                        pass = false;\r\n                        break;\r\n                    }\r\n                } else { //look for tangents (best with 2nd derivative usually)\r\n                    if((i < ref.length*.5 && val >= 0 )) {\r\n                        pass = false;\r\n                        break;\r\n                    } else if ((i > ref.length*.5 && val < 0)) {\r\n                        pass = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(critical !== 'peak' && critical !== 'valley' && pass === false) {\r\n                pass = true;\r\n                for(let i = 0; i < ref.length; i++) {\r\n                    let val = ref[i];\r\n                    if((i < ref.length*.5 && val <= 0 )) {\r\n                        pass = false;\r\n                        break;\r\n                    } else if ((i > ref.length*.5 && val > 0)) {\r\n                        pass = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return pass;\r\n        } else return undefined;\r\n    }\r\n\r\n    //returns array of indices of detected peaks/valleys\r\n    peakDetect = (smoothedArray,type='peak',window=49) => {\r\n        let mid = Math.floor(window*.5);\r\n        let peaks = [];\r\n        //console.log(smoothedArray.length-window)\r\n        for(let i = 0; i<smoothedArray.length-window; i++) {\r\n            let isPeak = this.isExtrema(smoothedArray.slice(i,i+window),type);\r\n            if(isPeak) {\r\n                peaks.push(i+mid-1);\r\n            }\r\n        }\r\n        return peaks;\r\n    }\r\n\r\n    //Linear interpolation from https://stackoverflow.com/questions/26941168/javascript-interpolate-an-array-of-numbers. Input array and number of samples to fit the data to\r\n\tinterpolateArray(data, fitCount, normalize=1) {\r\n\r\n\t\tvar norm = normalize;\r\n\r\n\t\tvar linearInterpolate = function (before, after, atPoint) {\r\n\t\t\treturn (before + (after - before) * atPoint)*norm;\r\n\t\t};\r\n\r\n\t\tvar newData = new Array();\r\n\t\tvar springFactor = new Number((data.length - 1) / (fitCount - 1));\r\n\t\tnewData[0] = data[0]; // for new allocation\r\n\t\tfor ( var i = 1; i < fitCount - 1; i++) {\r\n\t\t\tvar tmp = i * springFactor;\r\n\t\t\tvar before = new Number(Math.floor(tmp)).toFixed();\r\n\t\t\tvar after = new Number(Math.ceil(tmp)).toFixed();\r\n\t\t\tvar atPoint = tmp - before;\r\n\t\t\tnewData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n\t\t}\r\n\t\tnewData[fitCount - 1] = data[data.length - 1]; // for new allocation\r\n\t\treturn newData;\r\n\t};\r\n\r\n    //sets a threshold to avoid false positives at low volume\r\n    getPeakThreshold(arr,peakIndices, thresholdVar=0) {\r\n        let threshold;\r\n        let filtered = arr.filter((o,i)=>{if(peakIndices.indexOf(i)>-1) return true;});\r\n        if(thresholdVar === 0) {\r\n            threshold = this.mean(filtered); \r\n        } else threshold = (thresholdVar+this.mean(filtered))*0.5;  \r\n        \r\n        return threshold;\r\n    }\r\n\r\n    //sets the in-breath to the latest slow peak\r\n    calibrate = () => {\r\n        if(this.slowPeakTimes.length > 0) {\r\n            this.inPeakTimes = [this.slowPeakTimes[this.slowPeakTimes.length-1]];\r\n            this.outPeakTimes = [];\r\n\r\n            this.inPeakVolumes = [this.audSumSmoothedSlow[this.peaksslow[this.peaksslow.length-1]]];\r\n            this.outPeakVolumes = [this.audSumSmoothedSlow[this.valsslow[this.valsslow.length-1]]];\r\n            this.inToOutTimes = [];\r\n            this.breathingRate = []; //Avg difference between most recent breathing peaks\r\n            this.breathingRateVariability = []; //Difference between breathing rates\r\n            this.resetOutput();\r\n\r\n            this.output.isHolding = true;\r\n\r\n        }\r\n    }\r\n\r\n    onUpdate = () => { //after each loop cycle (15ms)\r\n\r\n    }\r\n\r\n    onBreath = () => { //after an out-breath is detected\r\n\r\n    }\r\n\r\n    calcBreathing = () => {\r\n        this.output.audioFFT = this.getAudioData().slice(6);\r\n        this.audsum = this.sumAudioData();\r\n        this.audSumGraph.shift(); this.audSumGraph.push(this.audsum);\r\n        this.audSpect.shift(); this.audSpect.push(this.output.audioFFT);\r\n\r\n        this.audTime.shift(); this.audTime.push(Date.now());\r\n\r\n        let smoothedfast = this.mean(this.audSumGraph.slice(this.audSumGraph.length-5));\r\n        this.audSumSmoothedFast.shift(); this.audSumSmoothedFast.push(smoothedfast);\r\n        let smoothedslow = this.mean(this.audSumGraph.slice(this.audSumGraph.length-40));\r\n        this.audSumSmoothedSlow.shift(); this.audSumSmoothedSlow.push(smoothedslow);\r\n        let smoothed2 = this.mean(this.audSumGraph.slice(this.audSumGraph.length-120));\r\n        this.audSumSmoothedLong.shift(); this.audSumSmoothedLong.push(smoothed2);\r\n        \r\n        this.peaksfast = this.peakDetect(this.audSumSmoothedFast,'peak',10);\r\n        this.valsfast = this.peakDetect(this.audSumSmoothedFast,'valley',10);\r\n\r\n        this.peaksslow = this.peakDetect(this.audSumSmoothedSlow,'peak',25);\r\n        this.valsslow = this.peakDetect(this.audSumSmoothedSlow,'valley',25);\r\n\r\n        this.peakslong = this.peakDetect(this.audSumSmoothedLong,'peak',80);\r\n        this.valslong = this.peakDetect(this.audSumSmoothedLong,'valley',80);\r\n\r\n        let l1 = this.longPeakTimes.length;\r\n        let slowThreshold = 0;\r\n        if(l1 > 1) {\r\n            this.peakThreshold = this.getPeakThreshold(this.audSumSmoothedLong,this.peakslong,this.peakThreshold);\r\n            slowThreshold = this.getPeakThreshold(this.audSumSmoothedSlow, this.peaksslow, 0);\r\n\r\n            if(this.audSumSmoothedSlow[this.audSumSmoothedSlow.length-1] < this.peakThreshold) {\r\n                this.wasBelowThreshold = true;\r\n            }\r\n        }\r\n        \r\n        //console.log(slowThreshold,this.peakThreshold);\r\n        if((slowThreshold > this.peakThreshold) || (l1 < 2) || (this.inPeakTimes.length > 0)) { //volume check\r\n            if(this.output.belowThreshold === true) this.output.belowThreshold = false;\r\n            if(this.fastPeakTimes[this.fastPeakTimes.length-1] !== this.audTime[this.peaksfast[this.peaksfast.length-1]]) {\r\n                this.fastPeakTimes.push(this.audTime[this.peaksfast[this.peaksfast.length-1]]); // 2 peaks = 1 breath, can't tell in vs out w/ mic though\r\n                if(this.fastPeakTimes.length > 1) {\r\n                    this.fastPeakDt.push(this.fastPeakTimes[this.fastPeakTimes.length-1] - this.fastPeakTimes[this.fastPeakTimes.length-2]);\r\n                }\r\n            }\r\n            if(this.slowPeakTimes[this.slowPeakTimes.length-1] !== this.audTime[this.peaksslow[this.peaksslow.length-1]]) {\r\n                this.slowPeakTimes.push(this.audTime[this.peaksslow[this.peaksslow.length-1]]); //2-3 peaks between two long peaks = 1 breath. Calibrate accordingly\r\n            \r\n                let l = this.longPeakTimes.length;\r\n                let s = this.slowPeakTimes.length;\r\n\r\n                let latestSlow = this.audSumSmoothedSlow[this.peaksslow[this.peaksslow.length-1]];\r\n                let latestLong = this.audSumSmoothedLong[this.peakslong[this.peakslong.length-1]];\r\n\r\n                if((l > 1 && s > 2) || this.inPeakTimes.length > 0) {\r\n                    if ((latestSlow > latestLong && (this.longPeakTimes[l-1] <= this.slowPeakTimes[s-1] || this.longPeakTimes[l-1]-this.slowPeakTimes[s-1] < 200)) || (this.inPeakTimes.length > 0 && this.outPeakTimes.length === 0)) {\r\n                        if((this.inPeakTimes[this.inPeakTimes.length-1] > this.outPeakTimes[this.outPeakTimes.length-1] || (this.inPeakTimes.length > 0 && this.outPeakTimes.length === 0)) && this.wasBelowThreshold === true) {\r\n                            this.outPeakTimes.push(this.slowPeakTimes[s-1]);\r\n                            this.outPeakVolumes.push(latestSlow);\r\n                            if(this.inPeakTimes.length > 0 ) this.inToOutTimes.push(this.slowPeakTimes[s-1]-this.inPeakTimes[this.inPeakTimes.length-1]);\r\n                            if(this.inPeakTimes.length > 1 && this.outPeakTimes.length > 1) {\r\n                                this.breathingRate.push(0.5*((this.inPeakTimes[this.inPeakTimes.length-1]-this.inPeakTimes[this.inPeakTimes.length-2])+(this.outPeakTimes[this.outPeakTimes.length-1]-this.outPeakTimes[this.outPeakTimes.length-2])))\r\n                                if(this.breathingRate.length > 1) {\r\n                                    this.breathingRateVariability.push(Math.abs(this.breathingRate[this.breathingRate.length-1]-this.breathingRate[this.breathingRate.length-2]))\r\n                                } \r\n                            }\r\n                            this.output.isHolding = false;\r\n                            this.wasBelowThreshold = false;\r\n                            this.onBreath();\r\n                        } else if ((this.inPeakTimes[this.inPeakTimes.length-1] < this.outPeakTimes[this.outPeakTimes.length-1] && this.inPeakTimes[this.inPeakTimes.length-1] < this.longPeakTimes[l-1]) && this.wasBelowThreshold === true) {\r\n                            this.inPeakTimes.push(this.slowPeakTimes[s-1]);\r\n                            this.inPeakVolumes.push(latestSlow);\r\n                            this.output.isHolding = true;\r\n                            this.wasBelowThreshold = false;\r\n                        }\r\n                        \r\n                    }\r\n                    \r\n                }\r\n            }\r\n            if(this.longPeakTimes[this.longPeakTimes.length-1] !== this.audTime[this.peakslong[this.peakslong.length-1]]) {\r\n\r\n                this.longPeakTimes.push(this.audTime[this.peakslong[this.peakslong.length-1]]); //1 big peak per breath, some smaller peaks\r\n                let placeholder = this.inPeakTimes[this.inPeakTimes.length-1];\r\n                if(placeholder == undefined) placeholder = Date.now();\r\n                let l = this.longPeakTimes.length;\r\n                let s = this.slowPeakTimes.length;\r\n\r\n                let latestSlow = this.audSumSmoothedSlow[this.peaksslow[this.peaksslow.length-1]];\r\n                let latestLong = this.audSumSmoothedLong[this.peakslong[this.peakslong.length-1]];\r\n\r\n                if(l > 1 && s > 2 && (latestSlow > latestLong) && ((this.inPeakTimes.length === 0 && this.outPeakTimes.length === 0) || Date.now() - placeholder > 20000)) { //only check again if 20 seconds elapse with no breaths captured to not cause overlaps and false positives\r\n                    \r\n                    if(((this.longPeakTimes[l-2] <= this.slowPeakTimes[s-2] || this.longPeakTimes[l-2]-this.slowPeakTimes[s-2] < 200) || this.longPeakTimes[l-2]-this.slowPeakTimes[s-2] < 200) && (this.longPeakTimes[l-1] >= this.slowPeakTimes[s-1] || this.longPeakTimes[l-1]-this.slowPeakTimes[s-1] < 200)) {\r\n                        if(this.longPeakTimes[l-2] < this.slowPeakTimes[s-3]){\r\n                            this.inPeakTimes.push(this.slowPeakTimes[s-2]);\r\n                            this.outPeakTimes.push(this.slowPeakTimes[s-1]);\r\n                            this.inPeakVolumes.push(this.audSumSmoothedSlow[this.peaksslow[this.peaksslow.length-2]])\r\n                            this.outPeakVolumes.push(latestSlow);\r\n                            this.inToOutTimes.push(this.slowPeakTimes[s-1]-this.slowPeakTimes[s-2]);\r\n                            if(this.inPeakTimes.length > 1 && this.outPeakTimes.length > 1) {\r\n                                this.breathingRate.push(0.5*((this.inPeakTimes[this.inPeakTimes.length-1]-this.inPeakTimes[this.inPeakTimes.length-2])+(this.outPeakTimes[this.outPeakTimes.length-1]-this.outPeakTimes[this.outPeakTimes.length-2])))\r\n                                if(this.breathingRate.length > 1) {\r\n                                    this.breathingRateVariability.push(Math.abs(this.breathingRate[this.breathingRate.length-1]-this.breathingRate[this.breathingRate.length-2]))\r\n                                } \r\n                            }\r\n                            this.onBreath();\r\n                        } else {\r\n                            this.inPeakTimes.push(this.slowPeakTimes[s-2]);\r\n                            this.outPeakTimes.push(this.slowPeakTimes[s-1]);\r\n                            this.inPeakVolumes.push(this.audSumSmoothedSlow[this.peaksslow[this.peaksslow.length-2]])\r\n                            this.outPeakVolumes.push(latestSlow);\r\n                            this.inToOutTimes.push(this.slowPeakTimes[s-1]-this.slowPeakTimes[s-2]);\r\n                            if(this.inPeakTimes.length > 1 && this.outPeakTimes.length > 1) {\r\n                                this.breathingRate.push(0.5*((this.inPeakTimes[this.inPeakTimes.length-1]-this.inPeakTimes[this.inPeakTimes.length-2])+(this.outPeakTimes[this.outPeakTimes.length-1]-this.outPeakTimes[this.outPeakTimes.length-2])))\r\n                                if(this.breathingRate.length > 1) {\r\n                                    this.breathingRateVariability.push(Math.abs(this.breathingRate[this.breathingRate.length-1]-this.breathingRate[this.breathingRate.length-2]))\r\n                                } \r\n                            }\r\n                            this.onBreath();\r\n                        }\r\n                    } else if (this.longPeakTimes[l-1] <= this.slowPeakTimes[s-1] || this.longPeakTimes[l-1]-this.slowPeakTimes[s-1] < 200) {\r\n                        if(this.inPeakTimes[this.inPeakTimes.length-1] > this.outPeakTimes[this.outPeakTimes.length-1] && this.wasBelowThreshold === true) {\r\n                            this.outPeakTimes.push(this.slowPeakTimes[s-1]);\r\n                            this.outPeakVolumes.push(latestSlow);\r\n                            if(this.inPeakTimes.length > 0 ) this.inToOutTimes.push(this.slowPeakTimes[s-1]-this.inPeakTimes[this.inPeakTimes.length-1]);\r\n                            if(this.inPeakTimes.length > 1 && this.outPeakTimes.length > 1) {\r\n                                this.breathingRate.push(0.5*((this.inPeakTimes[this.inPeakTimes.length-1]-this.inPeakTimes[this.inPeakTimes.length-2])+(this.outPeakTimes[this.outPeakTimes.length-1]-this.outPeakTimes[this.outPeakTimes.length-2])))\r\n                                if(this.breathingRate.length > 1) {\r\n                                    this.breathingRateVariability.push(Math.abs(this.breathingRate[this.breathingRate.length-1]-this.breathingRate[this.breathingRate.length-2]))\r\n                                } \r\n                            }\r\n                            this.wasBelowThreshold = false;\r\n                            this.onBreath();\r\n                        } else if ((this.inPeakTimes[this.inPeakTimes.length-1] < this.outPeakTimes[this.outPeakTimes.length-1] && this.inPeakTimes[this.inPeakTimes.length-1] < this.longPeakTimes[l-1])  && this.wasBelowThreshold === true) {\r\n                            this.inPeakTimes.push(this.slowPeakTimes[s-1]);\r\n                            this.inPeakVolumes.push(latestSlow);\r\n                            this.output.isHolding = true;\r\n                            this.wasBelowThreshold = false;\r\n                        }\r\n                        \r\n                    }\r\n                }\r\n            }\r\n        } else if (slowThreshold < this.peakThreshold) {\r\n            if(!this.output.belowThreshold) this.output.belowThreshold = true;\r\n        }\r\n        \r\n        // //FIX\r\n        // let foundidx = undefined;\r\n        // let found = this.inPeakTimes.find((t,k)=>{if(t > this.audTime[0]) {foundidx = k; return true;}});\r\n        // if(foundidx) {\r\n        //     let inpeakindices = []; let intimes = this.audTime.filter((o,z)=>{if(this.inPeakTimes.slice(this.inPeakTimes.length-foundidx).indexOf(o)>-1) {inpeakindices.push(z); return true;}})\r\n        //     this.inpeaks=inpeakindices;\r\n        //     let foundidx2 = undefined;\r\n        //     let found2 = this.outPeakTimes.find((t,k)=>{if(t > this.audTime[0]) {foundidx2 = k; return true;}});\r\n        //     if(foundidx2){ \r\n        //         let outpeakindices = []; let outtimes = this.audTime.filter((o,z)=>{if(this.outPeakTimes.slice(this.outPeakTimes.length-foundidx2).indexOf(o)>-1) {outpeakindices.push(z); return true;}})\r\n        //         this.outpeaks=outpeakindices;\r\n        //     }\r\n        // }\r\n        // else { \r\n        //     let inpeakindices = []; let intimes = this.audTime.filter((o,z)=>{if(this.inPeakTimes.indexOf(o)>-1) {inpeakindices.push(z); return true;}})\r\n        //     let outpeakindices = []; let outtimes = this.audTime.filter((o,z)=>{if(this.outPeakTimes.indexOf(o)>-1) {outpeakindices.push(z); return true;}})\r\n        //     this.inpeaks = inpeakindices;\r\n        //     this.outpeaks = outpeakindices\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    loop = () => {\r\n        if(this.analyzing === true) {\r\n            this.calcBreathing();\r\n            this.onUpdate();\r\n            setTimeout(()=>{this.loop()},15);\r\n        }\r\n    }\r\n\r\n\r\n}", "import {DOMFragment} from './DOMFragment.js'\nimport { BreathCapture } from '../../src/index.js'\n\n\n//Example Applet for integrating with the UI Manager\nexport class BreathTrainerApplet {\n\n    constructor(\n        parent=document.body\n    ) {\n    \n        //-------Keep these------- \n        this.parentNode = parent;\n        this.AppletHTML = null;\n        //------------------------\n\n        this.props = { //Changes to this can be used to auto-update the HTML and track important UI values \n            id: String(Math.floor(Math.random()*1000000)), //Keep random ID\n            //Add whatever else\n        };\n\n        this.canvas;\n        this.ctx;\n\n        this.canvas2;\n        this.ctx2;\n\n        this.offscreen = null;\n\t\tthis.offscreenctx = null;\n\n        this.mode = 'dvb'; //dvb, rlx, jmr, wmhf\n        this.animation = 'sine'; //sine, circle;\n        \n        \n        this.fs = 10;\n        this.amplitudes = [];\n        this.startTime = undefined;\n\n        this.rounds=0;\n        this.lastFrame = 0;\n        this.latentTime = 0;\n        this.currentFrame = 0;\n        this.time = 0;\n        this.fps = 60;\n        this.thisFrame = Date.now();\n\n        this.frequencyMaps = [\n            {type:\"diaphragmatic\",duration:60,map:[{frequency:0.1,amplitude:2,duration:60}]},\n            {type:\"breathhold\",duration:60,map:[{frequency:0.1,amplitude:2,duration:5},{frequency:0.0,amplitude:1,duration:10},{frequency:0.1,amplitude:2,duration:5}]},\n            {type:\"wimhof\",duration:60,map:[{frequency:.01,amplitude:1,duration:30},{frequency:0.1,amplitude:2,duration:30}]},\n            {type:\"relaxation\",duration:60,map:[{frequency:0.08,amplitude:2,duration:60}]},\n            {type:\"jacobsons\",duration:60,map:[{frequency:0.08,amplitude:2,duration:60}]}\n        ];\n\n        this.currentFrequencyMap = {type:\"diaphragmatic\",map:[{frequency:0.1,amplitude:2,duration:60}]};\n\n        this.currentFrequency = 0.1;\n        this.currentMapIndex = 0;\n        this.lastAmplitude = 0;\n        this.timeScaled = 0;\n        this.amplitudesY = new Array(1024).fill(0);\n        this.amplitudesX = new Array(1024).fill(0);\n        \n        this.scaling = 10;\n        this.animating = false;\n        this.step=-4;\n\n        this.Capture = new BreathCapture();\n        \n\n    }\n\n    //---------------------------------\n    //---Required template functions---\n    //---------------------------------\n\n    //Initalize the applet with the DOMFragment component for HTML rendering/logic to be used by the UI manager. Customize the app however otherwise.\n    init() {\n\n        //HTML render function, can also just be a plain template string, add the random ID to named divs so they don't cause conflicts with other UI elements\n        let HTMLtemplate = (props=this.props) => { \n            return `\n            <div id='${props.id}' style='height:100vh; width:100vw; background-color:#101010;'>\n                <div id='${props.id}menu'>\n                    <button id='${props.id}startmic'>Start Mic</button>\n                    <button id='${props.id}stopmic'>Stop Mic</button>\n                    <button id='${props.id}calibrate'>Calibrate (Breathe-in then click after ~1 sec)</button>\n                    <select id='${props.id}select'>\n                        <option value='none'>None</option>\n                        <option value='diaphragmatic' selected>Diaphragmatic</option>\n                        <option value='breathhold'>Breath Hold</option>\n                        <option value='relaxation'>Relaxation Breathing</option>\n                        <option value='jacobsons'>Jacobson's Muscular Relaxation</option>\n                        <option value='wimhof'>Wim Hof Method</option>\n                    </select>\n                </div> \n                <canvas id='${props.id}sinecanvas' style='position:absolute;width:100%;height:100%;'></canvas>\n                <canvas id='${props.id}canvas' style='width:100%;height:100%;background-color:rgba(0,0,0,0);'></canvas>\n            </div>`;\n        }\n\n        /*\n            <select id='${props.id}select'>\n                <option value='dvb' selected>Diaphragmatic</option>\n                <option value='rlx'>Relaxation</option>\n                <option value='jmr'>Jacobson's Muscular Relaxation</option>\n                <option value='wmhf'>Wim Hof Method</option>\n            </select>\n\n        */\n\n        //HTML UI logic setup. e.g. buttons, animations, xhr, etc.\n        let setupHTML = (props=this.props) => {\n            this.canvas = document.getElementById(props.id+'canvas');\n            this.ctx = this.canvas.getContext(\"2d\");\n\n            this.canvas2 = document.getElementById(props.id+'sinecanvas');\n            this.ctx2 = this.canvas2.getContext(\"2d\");\n\n            this.offscreen = new OffscreenCanvas(this.canvas.width,this.canvas.height);\n\t\t    this.offscreenctx = this.offscreen.getContext(\"2d\");\n\n            this.yscaling = this.canvas.height*0.2;\n            this.xscaling = this.canvas.width*0.1;\n\n            document.getElementById(props.id+'select').onchange = (event) => {\n                let t = event.target.value;\n                if(t === 'none') { this.canvas2.style.display = 'none'; }\n                else { \n                    this.canvas2.style.display = '';\n                    let found = this.frequencyMaps.find((o)=> {\n                        if(o.type === t)\n                            return true;\n                    });\n                    if(found) this.currentFrequencyMap = found;\n                }\n\n                this.time = 0;\n                this.timeScaled = 0;\n            }\n\n            document.getElementById(props.id+'startmic').onclick = () => {\n                this.Capture.analyze();\n                this.Capture.connectMic();\n            }\n\n            document.getElementById(props.id+'stopmic').onclick = () => {\n                this.Capture.stopMic();\n            }\n            \n            document.getElementById(props.id+'calibrate').onclick = () => {\n                this.Capture.calibrate();\n            }\n\n            //console.log(\"drawing...\")\n            this.animating = true;\n            this.animate();\n        }\n\n        this.AppletHTML = new DOMFragment( // Fast HTML rendering container object\n            HTMLtemplate,       //Define the html template string or function with properties\n            this.parentNode,    //Define where to append to (use the parentNode)\n            this.props,         //Reference to the HTML render properties (optional)\n            setupHTML,          //The setup functions for buttons and other onclick/onchange/etc functions which won't work inline in the template string\n            undefined,          //Can have an onchange function fire when properties change\n            \"NEVER\"             //Changes to props or the template string will automatically rerender the html template if \"NEVER\" is changed to \"FRAMERATE\" or another value, otherwise the UI manager handles resizing and reinits when new apps are added/destroyed\n        );  \n\n        //if(this.settings.length > 0) { this.configure(this.settings); } //You can give the app initialization settings if you want via an array.\n\n\n        //Add whatever else you need to initialize\n        setTimeout(()=>{this.responsive();},300);\n    \n    }\n\n    //Delete all event listeners and loops here and delete the HTML block\n    deinit() {\n        this.animating = false;\n        this.Capture.stop();\n        this.AppletHTML.deleteNode();\n        //Be sure to unsubscribe from state if using it and remove any extra event listeners\n    }\n\n    //Responsive UI update, for resizing and responding to new connections detected by the UI manager\n    responsive() {\n        //let canvas = document.getElementById(this.props.id+\"canvas\");\n        this.canvas.width = this.AppletHTML.node.clientWidth;\n        this.canvas.height = this.AppletHTML.node.clientHeight;\n        this.canvas2.width = this.AppletHTML.node.clientWidth;\n        this.canvas2.height = this.AppletHTML.node.clientHeight;\n        this.offscreen.width = this.AppletHTML.node.clientWidth;\n        this.offscreen.height = this.AppletHTML.node.clientHeight;\n        this.yscaling = this.canvas.height*0.2;\n        this.xscaling = this.canvas.width*0.1;\n\n        if(this.amplitudesY[0] === 0)\n            this.amplitudesY = new Array(1024).fill(this.canvas2.height);\n        this.amplitudesX = new Array(1024).fill(0);\n        this.amplitudesX.forEach((x,i) => {\n            this.amplitudesX[i] = (i/1023) * this.canvas2.width;\n        });\n    }\n\n    configure(settings=[]) { //For configuring from the address bar or saved settings. Expects an array of arguments [a,b,c] to do whatever with\n        settings.forEach((cmd,i) => {\n            //if(cmd === 'x'){//doSomething;}\n        });\n    }\n\n    //--------------------------------------------\n    //--Add anything else for internal use below--\n    //--------------------------------------------\n\n    //Make an array of size n from a to b \n    makeArr(startValue, stopValue, nSteps) {\n        var arr = [];\n        var step = (stopValue - startValue) / (nSteps - 1);\n        for (var i = 0; i < nSteps; i++) {\n            arr.push(startValue + (step * i));\n        }\n        return arr;\n    }\n\n    drawAudio = () => {\n\n        this.lastFrame = this.currentFrame;\n        this.currentFrame = performance.now();\n        this.fps = (this.currentFrame - this.lastFrame)*0.001;\n\n        let height = this.canvas.height;\n        let width = this.canvas.width;\n\n        let audInterval = this.fps;\n        //if(this.Capture.audTime[this.Capture.audTime.length-2]>0) audInterval = 0.001*(this.Capture.audTime[this.Capture.audTime.length-1] - this.Capture.audTime[this.Capture.audTime.length-2]);\n\n\n        //Generate sine wave at time with current frequency\n        //when current frequency timer ends, transition to next frequency gradually\n        //rotate, rinse, and repeat\n        //console.log(this.currentFrequencyMap,this.currentMapIndex);\n\n        this.timeScaled += audInterval+(width/1024 - this.fps);\n        this.time += this.fps;\n\n        let freq = this.currentFrequency;\n        let amp = this.currentFrequencyMap.map[this.currentMapIndex].amplitude+height/4;\n\n        this.ctx2.clearRect(0,0,width,height);\n\n        let x = width-1;\n        //console.log(amp,x,this.timeScaled,width,freq)\n        let sineAmp = Math.sin((x+this.timeScaled+width)/(width*freq));\n        let amplitude = (height*0.5 + amp * sineAmp);\n        this.amplitudesY.shift(); this.amplitudesY.push(amplitude);\n\n        this.ctx2.strokeStyle = 'limegreen';\n        this.ctx2.beginPath();\n        this.ctx2.moveTo(-10,this.amplitudesY[0]);\n\n        this.amplitudesY.forEach((a,i)=>{\n            if(i>0) {\n                this.ctx2.lineTo(this.amplitudesX[i],a+height*.2);\n            }\n        });\n        //console.log('stroked',this.amplitudesX[this.amplitudesX.length-1],this.amplitudesY[this.amplitudesY.length-1])\n        this.ctx2.stroke();\n\n        if(this.currentFrequency !== this.currentFrequencyMap.map[this.currentMapIndex].frequency) {\n            //this.latentTime += this.fps;\n            this.currentFrequency = this.currentFrequencyMap.map[this.currentMapIndex].frequency;\n        }\n\n        //console.log(this.time);\n        if(this.currentFrequency === this.currentFrequencyMap.map[this.currentMapIndex].frequency) {\n            let timeaccum = 0;\n \n            let duration = this.currentFrequencyMap.duration;\n            for(let i = 0; i<this.currentMapIndex+1; i++) {\n                timeaccum += this.currentFrequencyMap.map[i].duration;\n            }\n            if(this.time > timeaccum+duration*this.rounds+this.latentTime) {\n                if(this.currentMapIndex === this.currentFrequencyMap.map.length-1) {\n                    this.currentMapIndex = 0; this.rounds++;\n                }\n                else {this.currentMapIndex++;}\n            }\n        }\n        //let window = width * (audInterval);\n\n        // var tempCanvasContext = this.offscreenctx;\n\t\t// var tempCanvas = tempCanvasContext.canvas;\n        //this.offscreenctx.canvas.clearRect(0,0,width,height);\n\n\t\t// tempCanvasContext.drawImage(this.canvas2, 0, 0, width, height);\n\n        // this.ctx2.fillStyle = 'limegreen';\n        // this.ctx2.fillRect(width - 1, amplitude, 1, 1);\n\n        // this.ctx2.translate(-1, 0);\n        // // draw prev canvas before translation\n        // this.ctx2.drawImage(tempCanvas, 0, 0);\n        // // reset transformation matrix\n        // this.ctx2.setTransform(1, 0, 0, 1, 0, 0);\n\n        //FIX\n        let foundidx = undefined;\n        let found = this.Capture.inPeakTimes.find((t,k)=>{if(t > this.Capture.audTime[0]) {foundidx = k; return true;}});\n        if(foundidx) {\n            let inpeakindices = []; let intimes = this.Capture.audTime.filter((o,z)=>{if(this.Capture.inPeakTimes.slice(this.Capture.inPeakTimes.length-foundidx).indexOf(o)>-1) {inpeakindices.push(z); return true;}})\n            this.inpeaks=inpeakindices;\n            let foundidx2 = undefined;\n            let found2 = this.Capture.outPeakTimes.find((t,k)=>{if(t > this.Capture.audTime[0]) {foundidx2 = k; return true;}});\n            if(foundidx2){ \n                let outpeakindices = []; let outtimes = this.Capture.audTime.filter((o,z)=>{if(this.Capture.outPeakTimes.slice(this.Capture.outPeakTimes.length-foundidx2).indexOf(o)>-1) {outpeakindices.push(z); return true;}})\n                this.outpeaks=outpeakindices;\n            }\n        }\n        else { \n            let inpeakindices = []; let intimes = this.Capture.audTime.filter((o,z)=>{if(this.Capture.inPeakTimes.indexOf(o)>-1) {inpeakindices.push(z); return true;}})\n            let outpeakindices = []; let outtimes = this.Capture.audTime.filter((o,z)=>{if(this.Capture.outPeakTimes.indexOf(o)>-1) {outpeakindices.push(z); return true;}})\n            this.inpeaks = inpeakindices;\n            this.outpeaks = outpeakindices;\n        }\n\n        let xaxis = this.makeArr(0,this.canvas.width,this.Capture.output.audioFFT.length);\n        let xaxis2 = this.makeArr(0,this.canvas.width,this.Capture.audSumGraph.length);\n        //let xaxis3 = this.makeArr(0,this.canvas.width,this.audhist.length);\n\n\n        this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);\n        //---------------------------------------------------------- Audio FFT\n        this.ctx.linewidth = 2;\n        \n        this.ctx.moveTo(0,this.canvas.height-this.Capture.output.audioFFT[0]);\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = 'royalblue';\n        this.Capture.output.audioFFT.forEach((amp,i)=>{\n            if(i > 0) {\n                this.ctx.lineTo(xaxis[i],this.canvas.height-amp*(this.canvas.height/255));       \n            }\n        });\n        this.ctx.stroke();\n\n        //------------------------------------------------------------- Audio FFT Sum\n\n        this.ctx.linewidth = 3;\n        \n        this.ctx.moveTo(0,this.canvas.height-this.Capture.audSumGraph[0]);\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = \"red\"; \n                \n        this.Capture.audSumGraph.forEach((amp,i)=>{\n            if(i > 0) {\n                this.ctx.lineTo(xaxis2[i],this.canvas.height-amp*(this.canvas.height/Math.max(...this.Capture.audSumGraph)));       \n            }\n        });\n        this.ctx.stroke();\n        //------------------------------------------------------------- Audio FFT Sum Smoothed\n        \n        this.ctx.moveTo(0,this.canvas.height-this.Capture.audSumSmoothedFast[0]);\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = \"orange\"; \n                \n        this.Capture.audSumSmoothedFast.forEach((amp,i)=>{\n            if(i > 0) {\n                this.ctx.lineTo(xaxis2[i],this.canvas.height-amp*(this.canvas.height/Math.max(...this.Capture.audSumGraph)));       \n            }\n        });\n        this.ctx.stroke();\n        //------------------------------------------------------------- Audio FFT Sum More Smoothed\n\n        this.ctx.moveTo(0,this.canvas.height-this.Capture.audSumSmoothedSlow[0]);\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = \"gold\"; \n                \n        this.Capture.audSumSmoothedSlow.forEach((amp,i)=>{\n            if(i > 0) {\n                this.ctx.lineTo(xaxis2[i],this.canvas.height-amp*(this.canvas.height/Math.max(...this.Capture.audSumGraph)));       \n            }\n        });\n        this.ctx.stroke();\n\n        //------------------------------------------------------------- Audio FFT Sum More Smoothed\n        \n        this.ctx.moveTo(0,this.canvas.height-this.Capture.audSumSmoothedLong[0]);\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = \"yellow\"; \n                \n        this.Capture.audSumSmoothedLong.forEach((amp,i)=>{\n            if(i > 0) {\n                this.ctx.lineTo(xaxis2[i],this.canvas.height-amp*(this.canvas.height/Math.max(...this.Capture.audSumGraph)));       \n            }\n        });\n        this.ctx.stroke();\n\n        //------------------------------------------------------------- SMA 1 peaks\n        \n        this.ctx.fillStyle = 'chartreuse';\n        this.inpeaks.forEach((pidx)=> {\n            this.ctx.beginPath();\n            this.ctx.arc(xaxis2[pidx],this.canvas.height-this.Capture.audSumSmoothedSlow[pidx]*(this.canvas.height/Math.max(...this.Capture.audSumGraph)),5,0,Math.PI*2,true);\n            this.ctx.closePath();\n            this.ctx.fill();\n        });\n        //------------------------------------------------------------- SMA 1 valleys\n\n        this.ctx.fillStyle = 'green';\n        this.outpeaks.forEach((pidx)=> {\n            this.ctx.beginPath();\n            this.ctx.arc(xaxis2[pidx],this.canvas.height-this.Capture.audSumSmoothedSlow[pidx]*(this.canvas.height/Math.max(...this.Capture.audSumGraph)),5,0,Math.PI*2,true);\n            this.ctx.closePath();\n            this.ctx.fill();\n        });\n        //------------------------------------------------------------- SMA 2 peaks\n        this.ctx.fillStyle = 'pink';\n        this.Capture.peakslong.forEach((pidx)=> {\n            this.ctx.beginPath();\n            this.ctx.arc(xaxis2[pidx],this.canvas.height-this.Capture.audSumSmoothedLong[pidx]*(this.canvas.height/Math.max(...this.Capture.audSumGraph)),5,0,Math.PI*2,true);\n            this.ctx.closePath();\n            this.ctx.fill();\n        });\n        //------------------------------------------------------------- SMA 2 valleys\n\n        this.ctx.fillStyle = 'purple';\n        this.Capture.valslong.forEach((pidx)=> {\n            this.ctx.beginPath();\n            this.ctx.arc(xaxis2[pidx],this.canvas.height-this.Capture.audSumSmoothedLong[pidx]*(this.canvas.height/Math.max(...this.Capture.audSumGraph)),5,0,Math.PI*2,true);\n            this.ctx.closePath();\n            this.ctx.fill();\n        });\n        //------------------------------------------------------------- SMA fast peaks\n        this.ctx.fillStyle = 'red';\n        this.Capture.peaksfast.forEach((pidx)=> {\n            this.ctx.beginPath();\n            this.ctx.arc(xaxis2[pidx],this.canvas.height-this.Capture.audSumSmoothedFast[pidx]*(this.canvas.height/Math.max(...this.Capture.audSumGraph)),5,0,Math.PI*2,true);\n            this.ctx.closePath();\n            this.ctx.fill();\n        });\n        //------------------------------------------------------------- SMA fast valleys\n\n        this.ctx.fillStyle = 'crimson';\n        this.Capture.valsfast.forEach((pidx)=> {\n            this.ctx.beginPath();\n            this.ctx.arc(xaxis2[pidx],this.canvas.height-this.Capture.audSumSmoothedFast[pidx]*(this.canvas.height/Math.max(...this.Capture.audSumGraph)),5,0,Math.PI*2,true);\n            this.ctx.closePath();\n            this.ctx.fill();\n        });\n\n        // if(this.session.atlas.data.heg[0]) {\n        //     let heg = this.session.atlas.data.heg[0];\n        //     if(heg.count > 0 ) {\n        //         let ratio = [];\n        //         let tidx = undefined;\n        //         let found = heg.times.find((t,k) => {\n        //             if(t <= this.Capture.audTime[0]) {\n        //                 tidx=k;\n        //                 return true;\n        //             }\n        //         });\n        //         if(!found) {\n        //             //find first non-zero audtime, translate ratio x relatively\n        //             let tfound = this.Capture.audTime.find((t,ti) => {\n        //                 if(t !== 0) {\n        //                     tidx = ti;\n        //                     return true;\n        //                 }\n        //             });\n                    \n        //         }\n        //         this.ctx.beginPath();\n\n        //         let logScale = Math.ceil(Math.log10(Math.max(...ratio)+1));\n\n        //         let xoffset;\n\n        //         if(found) {\n        //             this.ctx.moveTo(0,ratio[0]);\n        //         } else if(!found) {\n        //             let leftmostTime = this.Capture.audTime[tidx];\n        //             let nearestAudidx = 0;\n        //             this.Capture.audTime.find((t, jk) => {\n        //                 if(t < heg.times[0]) {\n        //                     nearestAudidx = jk;\n        //                 }\n        //             });\n        //             xoffset = jk/1024 * width;\n        //         }\n\n        //         ratio.forEach((r,k) => {\n        //             if(k>0) {\n        //                 if(found)\n        //                     this.ctx.lineTo((k/ratio.length)*width,(r/(10*logScale))*height);\n        //                 else {\n        //                     this.ctx.lineTo((k/ratio.length)*width+xoffset,(r/(10*logScale))*height);\n        //                 }\n        //             } else {\n        //                 if(!found) {\n        //                     this.ctx.moveTo(xoffset,(r/(10*logScale))*height);\n        //                 }\n        //             }\n        //         });\n\n        //         this.ctx.stroke();\n        //     }\n        // }\n\n    }\n    \n    animate = () => {\n\n        this.drawAudio();\n\n        if(this.animating)\n            setTimeout(()=>{this.animate();},15);\n    }\n\n   \n} \n", "import './components/components.index'\n\nimport {BreathTrainerApplet} from './BreathTrainerApplet'\n\nlet trainer = new BreathTrainerApplet();\n\nconsole.log(trainer);\n\ntrainer.init();\n\nwindow.addEventListener('resize',(ev)=>{\n    trainer.responsive();\n})"],
  "mappings": "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",
  "names": []
}
